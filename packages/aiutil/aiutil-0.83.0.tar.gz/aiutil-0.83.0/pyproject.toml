[tool.poetry]
name = "aiutil"
version = "0.83.0"
description = "A utils Python package for data scientists."
authors = ["Benjamin Du <longendu@yahoo.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/legendu-net/aiutil"
keywords = ["AI", "Machine Learning", "tools", "utils"]

[tool.poetry.scripts]
logf = "aiutil.hadoop:logf.main"
repart_hdfs = "aiutil.hadoop:repart_hdfs.main"
pyspark_submit = "aiutil.hadoop:pyspark_submit.main"
pykinit = "aiutil.hadoop:kerberos.main"
match_memory = "aiutil:memory.main"
snb = "aiutil.notebook:search.main"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
sqlparse = ">=0.4.1"
pathspec = ">=0.8.1"
dateparser = ">=0.7.1"
numba = ">=0.53.0rc1.post1"
pandas = ">=1.2.0"
# ydata-profiling = ">=4.2.0"
loguru = ">=0.3.2"
toml = ">=0.10.0"
notifiers = ">=1.2.1"
PyYAML = ">=5.3.1"
python-magic = ">=0.4.0"
tqdm = ">=4.59.0"
pytest = ">=3.0"
dulwich = ">=0.20.24"
scikit-image = ">=0.18.3"
paramiko = ">=3.2.0"
# admin
psutil = { version = ">=5.7.3", optional = true}
# cv
opencv-python = { version = ">=4.0.0.0", optional = true }
pillow = { version = ">=7.0.0", optional = true }
# docker
networkx = { version = ">=2.5", optional = true }
docker = { version = ">=4.4.0", optional = true }
requests = { version = ">=2.20.0", optional = true }
# pdf
pypdf = { version = ">=3.16.1", optional = true }
# jupyter
nbformat = { version = ">=5.0.7", optional = true }
nbconvert = { version = ">=5.6.1", optional = true }
black = {extras = ["jupyter"], version = ">=23.7.0", optional = true}

[tool.poetry.extras]
cv = ["opencv-python", "pillow"]
docker = ["docker", "networkx", "requests"]
pdf = ["pypdf"]
jupyter = ["nbformat", "nbconvert", "black"]
admin = ["psutil"]
all = ["opencv-python", "pillow", "docker", "networkx", "requests", "pypdf", "nbformat", "nbconvert", "black", "psutil"]

[tool.poetry.group.dev.dependencies]
pylint = ">=2.7.0"
black = {extras = ["jupyter"], version = ">=23.7.0"}
#pytype = {git = "https://github.com/google/pytype.git"}
darglint = ">=1.5.8"

[tool.pylint.master]
ignore = ".venv,.ipynb_checkpoints"
unsafe-load-any-extension = "no"
extension-pkg-whitelist = "numpy,cv2,pyspark"
generated-members = "sqlite3.*,cv2.*,pyspark.*"
ignored-modules = "pyspark.sql.functions"

[tool.pylint.typecheck]
ignored-classes = "Namespace"

[tool.pylint.messages_control]
disable = "C0103,C0200,C0301,C0303,R0902,R0903,R0911,R0912,R0913,W0621,W0622,W0702,W0703,W1116"

[tool.pytype]
exclude = [
    ".venv/",
    "dist/",
    "*/.ipynb_checkpoints/",
]

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
