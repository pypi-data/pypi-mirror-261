image: python:3.10-alpine

stages:
  - coding-style
  - lint
  - test
  - api_docs

.ssh-template:
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
    - git submodule update --init --recursive

# Tests
coding-style:
  stage: coding-style
  before_script:
    - pip install -r test_requirements.txt
  script:
    - pycodestyle iqrfpy
  allow_failure: true

docstring-style:
  stage: coding-style
  before_script:
    - pip install -r test_requirements.txt
  script:
    - pydocstyle iqrfpy
  allow_failure: true

lint:
  stage: lint
  before_script:
    - pip install -r test_requirements.txt
  script:
    - pylint iqrfpy
  allow_failure: true

pytest:
  stage: test
  before_script:
    - pip install -r requirements.txt
    - pip install -r test_requirements.txt
    - pip install -e .
  script:
    - python3 -m pytest -v --cov=iqrfpy --cov-report=term-missing --cov-report=xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

api_deploy:
  stage: api_docs
  image: iqrftech/debian-python-builder:debian-bookworm-amd64
  only:
    - master
  extends: .ssh-template
  script:
    - apt-get update && apt install -y python3.11-venv
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install -r requirements.txt -r docs_requirements.txt
    - pdoc -d google -o docs iqrfpy/
    - rsync -hrvz --delete -e ssh docs/ www-deploy@icinga.iqrf.org:/data/nginx/apidocs/iqrfpy/latest/
