# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...commons.types.phone_number import PhoneNumber
from ...commons.types.voice_id import VoiceId
from ...commons.types.webhook import Webhook
from ...core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class InboundNumberDetailsResponse(pydantic.BaseModel):
    created_at: str = pydantic.Field()
    """
    The timestamp when the inbound number was configured.
    """

    phone_number: PhoneNumber = pydantic.Field()
    """
    The specific inbound phone number.
    """

    prompt: str = pydantic.Field()
    """
    The prompt your agent is using.
    """

    webhook: Webhook
    voice_id: VoiceId
    dynamic_data: typing.Optional[str] = pydantic.Field(default=None)
    """
    Any dynamic data associated with the inbound number, if applicable.
    """

    max_duration: int = pydantic.Field()
    """
    The maximum duration of a call to the inbound number, in minutes.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
