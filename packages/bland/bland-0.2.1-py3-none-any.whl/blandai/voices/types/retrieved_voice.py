# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class RetrievedVoice(pydantic.BaseModel):
    voice_preset_id: str = pydantic.Field()
    """
    The unique identifier for the voice preset.
    """

    voice_name: str = pydantic.Field()
    """
    Public voice name.
    """

    description: str = pydantic.Field()
    """
    The description of the voice preset.
    """

    reduce_latency: bool = pydantic.Field()
    """
    Whether or not the voice preset is optimized for low latency.
    """

    interruption_threshold: typing.Optional[int] = pydantic.Field(default=None)
    """
    The threshold for the voice preset to be interrupted by a new message.
    """

    language: str = pydantic.Field()
    """
    The language code of the voice preset.
    """

    voice_settings: typing.Any = pydantic.Field()
    """
    The voice settings of the voice preset.
    """

    editable: bool = pydantic.Field()
    """
    Whether or not your account can edit the preset.
    """

    public: bool = pydantic.Field()
    """
    Whether or not the preset is publicly available.
    """

    created_at: dt.datetime = pydantic.Field()
    """
    The date and time the preset was originally created.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
