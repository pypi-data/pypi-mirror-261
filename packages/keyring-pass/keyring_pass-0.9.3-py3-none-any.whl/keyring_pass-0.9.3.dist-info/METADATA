Metadata-Version: 2.1
Name: keyring-pass
Version: 0.9.3
Summary: https://www.passwordstore.org/ backend for https://pypi.org/project/keyring/
Home-page: https://github.com/nazarewk/keyring_pass
License: MIT
Keywords: keyring,pass
Author: Krzysztof Nazarewski
Author-email: 3494992+nazarewk@users.noreply.github.com
Requires-Python: >=3.7
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: jaraco-classes (>=3.2.3)
Requires-Dist: keyring (>=23.9.3)
Project-URL: Repository, https://github.com/nazarewk/keyring_pass
Description-Content-Type: text/markdown

# keyring_pass

This is a [`pass`](https://www.passwordstore.org/) backend for [`keyring`](https://pypi.org/project/keyring/)

Install with `pip install keyring-pass` and set the following content in
your [`keyringrc.cfg`](https://pypi.org/project/keyring/#config-file-path) file:

```ini
[backend]
default-keyring = keyring_pass.PasswordStoreBackend
```

You can modify the default `python-keyring` prefix for `pass`, by:

- adding following to `keyringrc.cfg`:

    ```ini
    [pass]
    key-prefix=alternative/prefix/path
    binary=gopass
    ```

- (for `keyring` version 23.0.0 or higher) setting environment variables:
    - `KEYRING_PROPERTY_PASS_KEY_PREFIX`
    - `KEYRING_PROPERTY_PASS_BINARY`

- You can clear the path (start from root), by setting above to `.` or an empty value (just `key-prefix=` on the line).

## Test your setup

You can check if your setup works end-to-end (creates, reads and deletes a key from password store).

```shell
# warning: this will create and delete a key at `<prefix>/test/asd` in your password store
python -m keyring_pass
```

