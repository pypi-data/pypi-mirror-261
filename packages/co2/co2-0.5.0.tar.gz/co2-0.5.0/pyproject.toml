[tool.poetry]
name = "co2"
version = "0.5.0"
description = ""
authors = ["Adam Bonnet <adambonnet0@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
typer = { extras = ["all"], version = "^0.9.0" }
pydantic = "^2.6.3"
pydantic-settings = "^2.2.1"
loguru = "^0.7.2"
pandas = "^2.2.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
co2 = 'co2.cli.cli:cli'

[tool.poetry.group.lint.dependencies]
isort = "^5.12.0"
black = "^23.3.0"
ruff = "^0.0.284"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
setuptools = "^68.0.0"
bandit = "^1.7.5"
isort = "^5.12.0"

[tool.poetry.group.semver.dependencies]
python-semantic-release = "^8.0.8"

[tool.isort]
profile = "black"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B106", "B108", "B608", "B104", "B105", "B320", "B408", "B410", "B318", "B306", "B603", "B307", "B404", "B101"]

[tool.ruff]
src = ["co2", "tests"]
ignore = ["E501", "E203"]
line-length = 88

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = ["co2/__init__.py:__version__"]
assets = []
commit_message = "{version} [skip ci]\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
build_command = "poetry build -n"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "beta"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
    "merge",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
ignore_token_for_push = true

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
