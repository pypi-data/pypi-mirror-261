[tool.poetry]
name = "xil"
version = "0.3.0"
description = "A Python library for fetching Israeli banks' ILS exchange rates"
license = "MIT"
authors = ["Jonathan Daniel <jonathand655@gmail.com>"]
readme = "README.md"
repository = "https://github.com/jond01/xil"
documentation = "https://github.com/jond01/xil#readme"
keywords = ["foreign exchange", "Israeli banks", "Shekel", "finance"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Natural Language :: English",
    "Natural Language :: Hebrew",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">=3.12"
pandas = {version = "^2.2.1", extras = ["html"]}

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"
pylint = "^3.0.1"

[tool.poetry.group.typing.dependencies]
mypy = "^1.6.1"
pandas-stubs = "^2.1.1.230928"

[tool.poetry.group.test.dependencies]
pytest = ">=7.4.1,<9.0.0"
coverage = "^7.3.2"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/jond01/xil/issues"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
    "F",    # Pyflakes
    "E",    # pycodestyle
    "W",    # pycodestyle
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flakes8-bugbear
    "A",    # flake8-builtins
    "DTZ",  # flake8-datetimez
    "ICN",  # flake8-import-conventions
    "SIM",  # flake8-simplify
    "PD",   # pandas-vet
    "PL",   # Pylint
    "PERF", # Perflint
    "RUF",  # Ruff
]
ignore = [
    "PD002", # allow inplace operations
    "PD901", # allow using `df` as a variable name
]
allowed-confusables = ["ט", "י", "ן"]

[tool.pylint]
enable = ["I"]
fail-on = ["useless-suppression"]
good-names = ["df"]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
warn_unused_ignores = true
warn_return_any = true
show_error_codes = true
exclude = ["dist/"]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    # Allow using the debugger in PyCharm when IPython is installed.
    # See: https://youtrack.jetbrains.com/issue/PY-44199/IPython-console-fails-when-running-Python-with-W-error
    '''
ignore:
Passing unrecognized arguments to super\(PyDevIPCompleter6\).__init__\(use_readline=False\).
object.__init__\(\) takes exactly one argument \(the instance to initialize\)
This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
:DeprecationWarning
    ''',
]
addopts = [
    "--import-mode=importlib",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "live: mark tests as needing an internet connection to run.",
]

[tool.coverage.run]
branch = true
source = ["xil"]

[tool.coverage.report]
fail_under = 0
show_missing = true
skip_empty = true

[tool.poetry-dynamic-versioning]
enable = false
# Remove the leading "v" from Dunamai's default pattern.
pattern = '''(?x)                                               (?# ignore whitespace)
    ^((?P<epoch>\d+)!)?(?P<base>\d+(\.\d+)*)                    (?# 1.2.3 or 1!2000.1.2)
    ([-._]?((?P<stage>[a-zA-Z]+)[-._]?(?P<revision>\d+)?))?     (?# b0)
    (\+(?P<tagged_metadata>.+))?$                               (?# +linux)
'''
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif env.PYPI_PUBLISH -%}
        {{ serialize_pep440(base, stage, revision, dev=distance) }}
    {%- else -%}
        {{ serialize_pep440(base, stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
