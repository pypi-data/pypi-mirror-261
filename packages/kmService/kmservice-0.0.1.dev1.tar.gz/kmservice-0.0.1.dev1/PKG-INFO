Metadata-Version: 2.1
Name: kmService
Version: 0.0.1.dev1
Project-URL: Documentation, https://Hazedd.github.io/kmService/
Project-URL: Source, https://github.com/Hazedd/kmService
Author-email: kmService <Hazedd@no-replay.github.com>
License-File: LICENSE.md
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.10
Requires-Dist: arcgisfeaturecache
Requires-Dist: nest-asyncio
Requires-Dist: pyproj
Requires-Dist: rtree
Description-Content-Type: text/markdown

<p align="center">
   <em><h1>kmService</h1></em>
</p>

[![build](https://github.com/Hazedd/kmService/workflows/Build/badge.svg)](https://github.com/Hazedd/kmService/actions)
[![codecov](https://codecov.io/gh/Hazedd/kmService/branch/master/graph/badge.svg)](https://codecov.io/gh/Hazedd/kmService)
[![PyPI version](https://badge.fury.io/py/kmService.svg)](https://badge.fury.io/py/kmService)

---

**Documentation**: <a href="https://Hazedd.github.io/kmService/" target="_blank">https://Hazedd.github.io/kmService/</a>

**Source Code**: <a href="https://github.com/Hazedd/kmService" target="_blank">https://github.com/Hazedd/kmService</a>

---
**first version!!!**

The dutch rail infrastructure utilizes kilometer measurements to pinpoint the location of objects along the linear infrastructure.
This service aims to give you reference information from km and geocodes.


## Install

```batch
pip install kmService
```

## Usage

```py
import asyncio
from kmService import KmService, get_km_service

if async:
    km_service_instance = await KmService.factory()
else:
    km_service_instance = get_km_service(url)

km_service_instance._get_km_async(x, y)

km_service_instance.get_point()


```

### arcGisFeatureCache
**arcGisFeatureCache**: <a href="https://github.com/Hazedd/ArcGisFeatureCache" target="_blank">https://github.com/Hazedd/ArcGisFeatureCache</a>


## License

This project is licensed under the terms of the MIT license.
