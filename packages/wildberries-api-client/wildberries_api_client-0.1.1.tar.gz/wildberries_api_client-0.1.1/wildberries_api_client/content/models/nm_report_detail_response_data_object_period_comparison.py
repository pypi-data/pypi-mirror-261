# coding: utf-8

"""
    Seller API Content

    Queries limits: <dd>Maximum of 100 requests per minute to all Content methods are allowed.</dd> <br> Public API for Content is designed for server-to-server data synchronization between Wildberries and Suppliers. <br> You download data from Wildberries to your computing resources for further operating it. <br> <code>It is not allowed to use the Content API as an external database. If you exceed the requests limits, access to the API will be restricted.</code> <br> <br> <br>   # noqa: E501

    OpenAPI spec version: 2.18
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NmReportDetailResponseDataObjectPeriodComparison(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'open_card_dynamics': 'int',
        'add_to_cart_dynamics': 'int',
        'orders_count_dynamics': 'int',
        'orders_sum_rub_dynamics': 'int',
        'buyouts_count_dynamics': 'int',
        'buyouts_sum_rub_dynamics': 'int',
        'cancel_count_dynamics': 'int',
        'cancel_sum_rub_dynamics': 'int',
        'avg_orders_count_per_day_dynamics': 'int',
        'avg_price_rub_dynamics': 'int',
        'conversions': 'NmReportDetailResponseDataObjectPeriodComparisonConversions'
    }

    attribute_map = {
        'open_card_dynamics': 'openCardDynamics',
        'add_to_cart_dynamics': 'addToCartDynamics',
        'orders_count_dynamics': 'ordersCountDynamics',
        'orders_sum_rub_dynamics': 'ordersSumRubDynamics',
        'buyouts_count_dynamics': 'buyoutsCountDynamics',
        'buyouts_sum_rub_dynamics': 'buyoutsSumRubDynamics',
        'cancel_count_dynamics': 'cancelCountDynamics',
        'cancel_sum_rub_dynamics': 'cancelSumRubDynamics',
        'avg_orders_count_per_day_dynamics': 'avgOrdersCountPerDayDynamics',
        'avg_price_rub_dynamics': 'avgPriceRubDynamics',
        'conversions': 'conversions'
    }

    def __init__(self, open_card_dynamics=None, add_to_cart_dynamics=None, orders_count_dynamics=None, orders_sum_rub_dynamics=None, buyouts_count_dynamics=None, buyouts_sum_rub_dynamics=None, cancel_count_dynamics=None, cancel_sum_rub_dynamics=None, avg_orders_count_per_day_dynamics=None, avg_price_rub_dynamics=None, conversions=None):  # noqa: E501
        """NmReportDetailResponseDataObjectPeriodComparison - a model defined in Swagger"""  # noqa: E501
        self._open_card_dynamics = None
        self._add_to_cart_dynamics = None
        self._orders_count_dynamics = None
        self._orders_sum_rub_dynamics = None
        self._buyouts_count_dynamics = None
        self._buyouts_sum_rub_dynamics = None
        self._cancel_count_dynamics = None
        self._cancel_sum_rub_dynamics = None
        self._avg_orders_count_per_day_dynamics = None
        self._avg_price_rub_dynamics = None
        self._conversions = None
        self.discriminator = None
        if open_card_dynamics is not None:
            self.open_card_dynamics = open_card_dynamics
        if add_to_cart_dynamics is not None:
            self.add_to_cart_dynamics = add_to_cart_dynamics
        if orders_count_dynamics is not None:
            self.orders_count_dynamics = orders_count_dynamics
        if orders_sum_rub_dynamics is not None:
            self.orders_sum_rub_dynamics = orders_sum_rub_dynamics
        if buyouts_count_dynamics is not None:
            self.buyouts_count_dynamics = buyouts_count_dynamics
        if buyouts_sum_rub_dynamics is not None:
            self.buyouts_sum_rub_dynamics = buyouts_sum_rub_dynamics
        if cancel_count_dynamics is not None:
            self.cancel_count_dynamics = cancel_count_dynamics
        if cancel_sum_rub_dynamics is not None:
            self.cancel_sum_rub_dynamics = cancel_sum_rub_dynamics
        if avg_orders_count_per_day_dynamics is not None:
            self.avg_orders_count_per_day_dynamics = avg_orders_count_per_day_dynamics
        if avg_price_rub_dynamics is not None:
            self.avg_price_rub_dynamics = avg_price_rub_dynamics
        if conversions is not None:
            self.conversions = conversions

    @property
    def open_card_dynamics(self):
        """Gets the open_card_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of product card views  # noqa: E501

        :return: The open_card_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._open_card_dynamics

    @open_card_dynamics.setter
    def open_card_dynamics(self, open_card_dynamics):
        """Sets the open_card_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of product card views  # noqa: E501

        :param open_card_dynamics: The open_card_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._open_card_dynamics = open_card_dynamics

    @property
    def add_to_cart_dynamics(self):
        """Gets the add_to_cart_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of additions to the cart  # noqa: E501

        :return: The add_to_cart_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._add_to_cart_dynamics

    @add_to_cart_dynamics.setter
    def add_to_cart_dynamics(self, add_to_cart_dynamics):
        """Sets the add_to_cart_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of additions to the cart  # noqa: E501

        :param add_to_cart_dynamics: The add_to_cart_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._add_to_cart_dynamics = add_to_cart_dynamics

    @property
    def orders_count_dynamics(self):
        """Gets the orders_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of order count  # noqa: E501

        :return: The orders_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._orders_count_dynamics

    @orders_count_dynamics.setter
    def orders_count_dynamics(self, orders_count_dynamics):
        """Sets the orders_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of order count  # noqa: E501

        :param orders_count_dynamics: The orders_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._orders_count_dynamics = orders_count_dynamics

    @property
    def orders_sum_rub_dynamics(self):
        """Gets the orders_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of order sum in rubles  # noqa: E501

        :return: The orders_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._orders_sum_rub_dynamics

    @orders_sum_rub_dynamics.setter
    def orders_sum_rub_dynamics(self, orders_sum_rub_dynamics):
        """Sets the orders_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of order sum in rubles  # noqa: E501

        :param orders_sum_rub_dynamics: The orders_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._orders_sum_rub_dynamics = orders_sum_rub_dynamics

    @property
    def buyouts_count_dynamics(self):
        """Gets the buyouts_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of buyouts count  # noqa: E501

        :return: The buyouts_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._buyouts_count_dynamics

    @buyouts_count_dynamics.setter
    def buyouts_count_dynamics(self, buyouts_count_dynamics):
        """Sets the buyouts_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of buyouts count  # noqa: E501

        :param buyouts_count_dynamics: The buyouts_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._buyouts_count_dynamics = buyouts_count_dynamics

    @property
    def buyouts_sum_rub_dynamics(self):
        """Gets the buyouts_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of buyout sum in rubles  # noqa: E501

        :return: The buyouts_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._buyouts_sum_rub_dynamics

    @buyouts_sum_rub_dynamics.setter
    def buyouts_sum_rub_dynamics(self, buyouts_sum_rub_dynamics):
        """Sets the buyouts_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of buyout sum in rubles  # noqa: E501

        :param buyouts_sum_rub_dynamics: The buyouts_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._buyouts_sum_rub_dynamics = buyouts_sum_rub_dynamics

    @property
    def cancel_count_dynamics(self):
        """Gets the cancel_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of canceled items count  # noqa: E501

        :return: The cancel_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._cancel_count_dynamics

    @cancel_count_dynamics.setter
    def cancel_count_dynamics(self, cancel_count_dynamics):
        """Sets the cancel_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of canceled items count  # noqa: E501

        :param cancel_count_dynamics: The cancel_count_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._cancel_count_dynamics = cancel_count_dynamics

    @property
    def cancel_sum_rub_dynamics(self):
        """Gets the cancel_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of canceled items sum in rubles  # noqa: E501

        :return: The cancel_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._cancel_sum_rub_dynamics

    @cancel_sum_rub_dynamics.setter
    def cancel_sum_rub_dynamics(self, cancel_sum_rub_dynamics):
        """Sets the cancel_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of canceled items sum in rubles  # noqa: E501

        :param cancel_sum_rub_dynamics: The cancel_sum_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._cancel_sum_rub_dynamics = cancel_sum_rub_dynamics

    @property
    def avg_orders_count_per_day_dynamics(self):
        """Gets the avg_orders_count_per_day_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of average daily order count  # noqa: E501

        :return: The avg_orders_count_per_day_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._avg_orders_count_per_day_dynamics

    @avg_orders_count_per_day_dynamics.setter
    def avg_orders_count_per_day_dynamics(self, avg_orders_count_per_day_dynamics):
        """Sets the avg_orders_count_per_day_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of average daily order count  # noqa: E501

        :param avg_orders_count_per_day_dynamics: The avg_orders_count_per_day_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._avg_orders_count_per_day_dynamics = avg_orders_count_per_day_dynamics

    @property
    def avg_price_rub_dynamics(self):
        """Gets the avg_price_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501

        Dynamics of average price for products. Discounts for promotions and WB discounts are considered.  # noqa: E501

        :return: The avg_price_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: int
        """
        return self._avg_price_rub_dynamics

    @avg_price_rub_dynamics.setter
    def avg_price_rub_dynamics(self, avg_price_rub_dynamics):
        """Sets the avg_price_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.

        Dynamics of average price for products. Discounts for promotions and WB discounts are considered.  # noqa: E501

        :param avg_price_rub_dynamics: The avg_price_rub_dynamics of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: int
        """

        self._avg_price_rub_dynamics = avg_price_rub_dynamics

    @property
    def conversions(self):
        """Gets the conversions of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501


        :return: The conversions of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :rtype: NmReportDetailResponseDataObjectPeriodComparisonConversions
        """
        return self._conversions

    @conversions.setter
    def conversions(self, conversions):
        """Sets the conversions of this NmReportDetailResponseDataObjectPeriodComparison.


        :param conversions: The conversions of this NmReportDetailResponseDataObjectPeriodComparison.  # noqa: E501
        :type: NmReportDetailResponseDataObjectPeriodComparisonConversions
        """

        self._conversions = conversions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NmReportDetailResponseDataObjectPeriodComparison, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NmReportDetailResponseDataObjectPeriodComparison):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
