# coding: utf-8

"""
    Seller API Promotion

    Synchronization from the database runs every 3 minutes.  <br>The status is changed once per 1 minute. During this interval the last status change action will be saved. <br>The bid change takes place once in 30 seconds. Within this interval the last action to change the bid will be saved.   # noqa: E501

    OpenAPI spec version: 2.20
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse2005Items(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'status': 'int',
        'place': 'int',
        'budget': 'int',
        'daily_limit': 'int',
        'category_name': 'str',
        'cpm': 'int',
        'url': 'str',
        'advert_type': 'int',
        'created_at': 'datetime',
        'updated_at': 'datetime',
        'date_from': 'datetime',
        'date_to': 'datetime',
        'nms': 'list[int]',
        'bottom_text1': 'str',
        'bottom_text2': 'str',
        'message': 'str',
        'additional_settings': 'int',
        'receivers_count': 'int',
        'subject_id': 'int',
        'subject_name': 'str',
        'action_name': 'str',
        'show_hours': 'list[InlineResponse2005ShowHours]',
        'erid': 'str'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'status': 'status',
        'place': 'place',
        'budget': 'budget',
        'daily_limit': 'daily_limit',
        'category_name': 'category_name',
        'cpm': 'cpm',
        'url': 'url',
        'advert_type': 'advert_type',
        'created_at': 'created_at',
        'updated_at': 'updated_at',
        'date_from': 'date_from',
        'date_to': 'date_to',
        'nms': 'nms',
        'bottom_text1': 'bottomText1',
        'bottom_text2': 'bottomText2',
        'message': 'message',
        'additional_settings': 'additionalSettings',
        'receivers_count': 'receiversCount',
        'subject_id': 'subject_id',
        'subject_name': 'subject_name',
        'action_name': 'action_name',
        'show_hours': 'show_hours',
        'erid': 'Erid'
    }

    def __init__(self, id=None, name=None, status=None, place=None, budget=None, daily_limit=None, category_name=None, cpm=None, url=None, advert_type=None, created_at=None, updated_at=None, date_from=None, date_to=None, nms=None, bottom_text1=None, bottom_text2=None, message=None, additional_settings=None, receivers_count=None, subject_id=None, subject_name=None, action_name=None, show_hours=None, erid=None):  # noqa: E501
        """InlineResponse2005Items - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._name = None
        self._status = None
        self._place = None
        self._budget = None
        self._daily_limit = None
        self._category_name = None
        self._cpm = None
        self._url = None
        self._advert_type = None
        self._created_at = None
        self._updated_at = None
        self._date_from = None
        self._date_to = None
        self._nms = None
        self._bottom_text1 = None
        self._bottom_text2 = None
        self._message = None
        self._additional_settings = None
        self._receivers_count = None
        self._subject_id = None
        self._subject_name = None
        self._action_name = None
        self._show_hours = None
        self._erid = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if status is not None:
            self.status = status
        if place is not None:
            self.place = place
        if budget is not None:
            self.budget = budget
        if daily_limit is not None:
            self.daily_limit = daily_limit
        if category_name is not None:
            self.category_name = category_name
        if cpm is not None:
            self.cpm = cpm
        if url is not None:
            self.url = url
        if advert_type is not None:
            self.advert_type = advert_type
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at
        if date_from is not None:
            self.date_from = date_from
        if date_to is not None:
            self.date_to = date_to
        if nms is not None:
            self.nms = nms
        if bottom_text1 is not None:
            self.bottom_text1 = bottom_text1
        if bottom_text2 is not None:
            self.bottom_text2 = bottom_text2
        if message is not None:
            self.message = message
        if additional_settings is not None:
            self.additional_settings = additional_settings
        if receivers_count is not None:
            self.receivers_count = receivers_count
        if subject_id is not None:
            self.subject_id = subject_id
        if subject_name is not None:
            self.subject_name = subject_name
        if action_name is not None:
            self.action_name = action_name
        if show_hours is not None:
            self.show_hours = show_hours
        if erid is not None:
            self.erid = erid

    @property
    def id(self):
        """Gets the id of this InlineResponse2005Items.  # noqa: E501

        Banner ID  # noqa: E501

        :return: The id of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse2005Items.

        Banner ID  # noqa: E501

        :param id: The id of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this InlineResponse2005Items.  # noqa: E501

        Brand  # noqa: E501

        :return: The name of this InlineResponse2005Items.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse2005Items.

        Brand  # noqa: E501

        :param name: The name of this InlineResponse2005Items.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this InlineResponse2005Items.  # noqa: E501

        Status (same as media campaign status)  # noqa: E501

        :return: The status of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InlineResponse2005Items.

        Status (same as media campaign status)  # noqa: E501

        :param status: The status of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._status = status

    @property
    def place(self):
        """Gets the place of this InlineResponse2005Items.  # noqa: E501

        Placement on the page  # noqa: E501

        :return: The place of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._place

    @place.setter
    def place(self, place):
        """Sets the place of this InlineResponse2005Items.

        Placement on the page  # noqa: E501

        :param place: The place of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._place = place

    @property
    def budget(self):
        """Gets the budget of this InlineResponse2005Items.  # noqa: E501

        Budget  # noqa: E501

        :return: The budget of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._budget

    @budget.setter
    def budget(self, budget):
        """Sets the budget of this InlineResponse2005Items.

        Budget  # noqa: E501

        :param budget: The budget of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._budget = budget

    @property
    def daily_limit(self):
        """Gets the daily_limit of this InlineResponse2005Items.  # noqa: E501

        Daily limit (for impression banners)  # noqa: E501

        :return: The daily_limit of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._daily_limit

    @daily_limit.setter
    def daily_limit(self, daily_limit):
        """Sets the daily_limit of this InlineResponse2005Items.

        Daily limit (for impression banners)  # noqa: E501

        :param daily_limit: The daily_limit of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._daily_limit = daily_limit

    @property
    def category_name(self):
        """Gets the category_name of this InlineResponse2005Items.  # noqa: E501

        Category name  # noqa: E501

        :return: The category_name of this InlineResponse2005Items.  # noqa: E501
        :rtype: str
        """
        return self._category_name

    @category_name.setter
    def category_name(self, category_name):
        """Sets the category_name of this InlineResponse2005Items.

        Category name  # noqa: E501

        :param category_name: The category_name of this InlineResponse2005Items.  # noqa: E501
        :type: str
        """

        self._category_name = category_name

    @property
    def cpm(self):
        """Gets the cpm of this InlineResponse2005Items.  # noqa: E501

        Bid  # noqa: E501

        :return: The cpm of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._cpm

    @cpm.setter
    def cpm(self, cpm):
        """Sets the cpm of this InlineResponse2005Items.

        Bid  # noqa: E501

        :param cpm: The cpm of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._cpm = cpm

    @property
    def url(self):
        """Gets the url of this InlineResponse2005Items.  # noqa: E501

        Link from the banner  # noqa: E501

        :return: The url of this InlineResponse2005Items.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InlineResponse2005Items.

        Link from the banner  # noqa: E501

        :param url: The url of this InlineResponse2005Items.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def advert_type(self):
        """Gets the advert_type of this InlineResponse2005Items.  # noqa: E501

        <dl> <dt>Campaign type:</dt> <dd><code>1</code> — banner</dd> <dd><code>2</code> — pop-up menu</dd> <dd><code>3</code> — mailings</dd> <dd><code>4</code> — social networks</dd> <dd><code>5</code> — push notification in Wildberries app</dd> </dl>   # noqa: E501

        :return: The advert_type of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._advert_type

    @advert_type.setter
    def advert_type(self, advert_type):
        """Sets the advert_type of this InlineResponse2005Items.

        <dl> <dt>Campaign type:</dt> <dd><code>1</code> — banner</dd> <dd><code>2</code> — pop-up menu</dd> <dd><code>3</code> — mailings</dd> <dd><code>4</code> — social networks</dd> <dd><code>5</code> — push notification in Wildberries app</dd> </dl>   # noqa: E501

        :param advert_type: The advert_type of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._advert_type = advert_type

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse2005Items.  # noqa: E501

        Banner creation date  # noqa: E501

        :return: The created_at of this InlineResponse2005Items.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse2005Items.

        Banner creation date  # noqa: E501

        :param created_at: The created_at of this InlineResponse2005Items.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this InlineResponse2005Items.  # noqa: E501

        Banner update date  # noqa: E501

        :return: The updated_at of this InlineResponse2005Items.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InlineResponse2005Items.

        Banner update date  # noqa: E501

        :param updated_at: The updated_at of this InlineResponse2005Items.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def date_from(self):
        """Gets the date_from of this InlineResponse2005Items.  # noqa: E501

        Banner start date  # noqa: E501

        :return: The date_from of this InlineResponse2005Items.  # noqa: E501
        :rtype: datetime
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this InlineResponse2005Items.

        Banner start date  # noqa: E501

        :param date_from: The date_from of this InlineResponse2005Items.  # noqa: E501
        :type: datetime
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this InlineResponse2005Items.  # noqa: E501

        Banner stop date  # noqa: E501

        :return: The date_to of this InlineResponse2005Items.  # noqa: E501
        :rtype: datetime
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this InlineResponse2005Items.

        Banner stop date  # noqa: E501

        :param date_to: The date_to of this InlineResponse2005Items.  # noqa: E501
        :type: datetime
        """

        self._date_to = date_to

    @property
    def nms(self):
        """Gets the nms of this InlineResponse2005Items.  # noqa: E501

        WB articles  # noqa: E501

        :return: The nms of this InlineResponse2005Items.  # noqa: E501
        :rtype: list[int]
        """
        return self._nms

    @nms.setter
    def nms(self, nms):
        """Sets the nms of this InlineResponse2005Items.

        WB articles  # noqa: E501

        :param nms: The nms of this InlineResponse2005Items.  # noqa: E501
        :type: list[int]
        """

        self._nms = nms

    @property
    def bottom_text1(self):
        """Gets the bottom_text1 of this InlineResponse2005Items.  # noqa: E501

        Text under the banner  # noqa: E501

        :return: The bottom_text1 of this InlineResponse2005Items.  # noqa: E501
        :rtype: str
        """
        return self._bottom_text1

    @bottom_text1.setter
    def bottom_text1(self, bottom_text1):
        """Sets the bottom_text1 of this InlineResponse2005Items.

        Text under the banner  # noqa: E501

        :param bottom_text1: The bottom_text1 of this InlineResponse2005Items.  # noqa: E501
        :type: str
        """

        self._bottom_text1 = bottom_text1

    @property
    def bottom_text2(self):
        """Gets the bottom_text2 of this InlineResponse2005Items.  # noqa: E501

        Text under the banner, second string  # noqa: E501

        :return: The bottom_text2 of this InlineResponse2005Items.  # noqa: E501
        :rtype: str
        """
        return self._bottom_text2

    @bottom_text2.setter
    def bottom_text2(self, bottom_text2):
        """Sets the bottom_text2 of this InlineResponse2005Items.

        Text under the banner, second string  # noqa: E501

        :param bottom_text2: The bottom_text2 of this InlineResponse2005Items.  # noqa: E501
        :type: str
        """

        self._bottom_text2 = bottom_text2

    @property
    def message(self):
        """Gets the message of this InlineResponse2005Items.  # noqa: E501

        Notification or mailing text  # noqa: E501

        :return: The message of this InlineResponse2005Items.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InlineResponse2005Items.

        Notification or mailing text  # noqa: E501

        :param message: The message of this InlineResponse2005Items.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def additional_settings(self):
        """Gets the additional_settings of this InlineResponse2005Items.  # noqa: E501

        Additional information. <dl> <dt>Mailing format:</dt> <dd><code>1</code> — common</dd> <dd><code>2</code> — segment</dd> <dd><code>3</code> — unique</dd> </dl> <dl> <dt>Social network:</dt> <dd><code>1</code> — VK (<a href=\"vk.ru\">vk.ru</a>)</dd> <dd><code>2</code> — OK (<a href=\"ok.ru\">ok.ru</a>)</dd> </dl>   # noqa: E501

        :return: The additional_settings of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._additional_settings

    @additional_settings.setter
    def additional_settings(self, additional_settings):
        """Sets the additional_settings of this InlineResponse2005Items.

        Additional information. <dl> <dt>Mailing format:</dt> <dd><code>1</code> — common</dd> <dd><code>2</code> — segment</dd> <dd><code>3</code> — unique</dd> </dl> <dl> <dt>Social network:</dt> <dd><code>1</code> — VK (<a href=\"vk.ru\">vk.ru</a>)</dd> <dd><code>2</code> — OK (<a href=\"ok.ru\">ok.ru</a>)</dd> </dl>   # noqa: E501

        :param additional_settings: The additional_settings of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._additional_settings = additional_settings

    @property
    def receivers_count(self):
        """Gets the receivers_count of this InlineResponse2005Items.  # noqa: E501

        Number of push notification recipients  # noqa: E501

        :return: The receivers_count of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._receivers_count

    @receivers_count.setter
    def receivers_count(self, receivers_count):
        """Sets the receivers_count of this InlineResponse2005Items.

        Number of push notification recipients  # noqa: E501

        :param receivers_count: The receivers_count of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._receivers_count = receivers_count

    @property
    def subject_id(self):
        """Gets the subject_id of this InlineResponse2005Items.  # noqa: E501

        Parent category ID for the good  # noqa: E501

        :return: The subject_id of this InlineResponse2005Items.  # noqa: E501
        :rtype: int
        """
        return self._subject_id

    @subject_id.setter
    def subject_id(self, subject_id):
        """Sets the subject_id of this InlineResponse2005Items.

        Parent category ID for the good  # noqa: E501

        :param subject_id: The subject_id of this InlineResponse2005Items.  # noqa: E501
        :type: int
        """

        self._subject_id = subject_id

    @property
    def subject_name(self):
        """Gets the subject_name of this InlineResponse2005Items.  # noqa: E501

        Parent category name for the good  # noqa: E501

        :return: The subject_name of this InlineResponse2005Items.  # noqa: E501
        :rtype: str
        """
        return self._subject_name

    @subject_name.setter
    def subject_name(self, subject_name):
        """Sets the subject_name of this InlineResponse2005Items.

        Parent category name for the good  # noqa: E501

        :param subject_name: The subject_name of this InlineResponse2005Items.  # noqa: E501
        :type: str
        """

        self._subject_name = subject_name

    @property
    def action_name(self):
        """Gets the action_name of this InlineResponse2005Items.  # noqa: E501

        Promo name  # noqa: E501

        :return: The action_name of this InlineResponse2005Items.  # noqa: E501
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this InlineResponse2005Items.

        Promo name  # noqa: E501

        :param action_name: The action_name of this InlineResponse2005Items.  # noqa: E501
        :type: str
        """

        self._action_name = action_name

    @property
    def show_hours(self):
        """Gets the show_hours of this InlineResponse2005Items.  # noqa: E501

        Display time  # noqa: E501

        :return: The show_hours of this InlineResponse2005Items.  # noqa: E501
        :rtype: list[InlineResponse2005ShowHours]
        """
        return self._show_hours

    @show_hours.setter
    def show_hours(self, show_hours):
        """Sets the show_hours of this InlineResponse2005Items.

        Display time  # noqa: E501

        :param show_hours: The show_hours of this InlineResponse2005Items.  # noqa: E501
        :type: list[InlineResponse2005ShowHours]
        """

        self._show_hours = show_hours

    @property
    def erid(self):
        """Gets the erid of this InlineResponse2005Items.  # noqa: E501

        Unique campaign ID for the ad data operator  # noqa: E501

        :return: The erid of this InlineResponse2005Items.  # noqa: E501
        :rtype: str
        """
        return self._erid

    @erid.setter
    def erid(self, erid):
        """Sets the erid of this InlineResponse2005Items.

        Unique campaign ID for the ad data operator  # noqa: E501

        :param erid: The erid of this InlineResponse2005Items.  # noqa: E501
        :type: str
        """

        self._erid = erid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2005Items, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2005Items):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
