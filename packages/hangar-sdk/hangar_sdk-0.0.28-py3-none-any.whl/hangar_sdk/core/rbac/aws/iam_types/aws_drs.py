from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_drs_privilege_type = Union[Literal["DescribeSourceServers"], Literal["DescribeReplicationConfigurationTemplates"], Literal["DeleteJob"], Literal["DisconnectRecoveryInstance"], Literal["StopFailback"], Literal["GetSuggestedFailbackClientDeviceMappingForDrs"], Literal["StartReplication"], Literal["DisconnectSourceServer"], Literal["UpdateReplicationConfiguration"], Literal["NotifyVolumeEventForDrs"], Literal["DescribeJobLogItems"], Literal["CreateConvertedSnapshotForDrs"], Literal["DeleteRecoveryInstance"], Literal["GetFailbackCommandForDrs"], Literal["NotifyAgentReplicationProgressForDrs"], Literal["UpdateFailbackClientLastSeenForDrs"], Literal["UpdateFailbackClientDeviceMappingForDrs"], Literal["BatchDeleteSnapshotRequestForDrs"], Literal["StopReplication"], Literal["UpdateReplicationCertificateForDrs"], Literal["GetAgentCommandForDrs"], Literal["NotifyAgentDisconnectedForDrs"], Literal["TagResource"], Literal["SendChannelCommandResultForDrs"], Literal["UpdateAgentReplicationProcessStateForDrs"], Literal["DescribeSnapshotRequestsForDrs"], Literal["NotifyAgentAuthenticationForDrs"], Literal["DeleteReplicationConfigurationTemplate"], Literal["IssueAgentCertificateForDrs"], Literal["GetChannelCommandsForDrs"], Literal["NotifyConsistencyAttainedForDrs"], Literal["NotifyReplicationServerAuthenticationForDrs"], Literal["StartSourceNetworkReplication"], Literal["UpdateFailbackReplicationConfiguration"], Literal["SendVolumeStatsForDrs"], Literal["RetryDataReplication"], Literal["ListLaunchActions"], Literal["UpdateAgentConversionInfoForDrs"], Literal["GetAgentRuntimeConfigurationForDrs"], Literal["InitializeService"], Literal["CreateSourceServerForDrs"], Literal["DescribeReplicationServerAssociationsForDrs"], Literal["PutLaunchAction"], Literal["UpdateLaunchConfiguration"], Literal["StartFailbackLaunch"], Literal["CreateExtendedSourceServer"], Literal["DeleteLaunchAction"], Literal["GetAgentInstallationAssetsForDrs"], Literal["CreateSourceNetwork"], Literal["GetReplicationConfiguration"], Literal["StartRecovery"], Literal["GetAgentConfirmedResumeInfoForDrs"], Literal["StopSourceNetworkReplication"], Literal["DeleteSourceServer"], Literal["StartSourceNetworkRecovery"], Literal["DescribeRecoveryInstances"], Literal["GetAgentSnapshotCreditsForDrs"], Literal["GetFailbackLaunchRequestedForDrs"], Literal["SendAgentLogsForDrs"], Literal["DeleteLaunchConfigurationTemplate"], Literal["UpdateReplicationConfigurationTemplate"], Literal["AssociateFailbackClientToRecoveryInstanceForDrs"], Literal["DescribeLaunchConfigurationTemplates"], Literal["UpdateAgentBacklogForDrs"], Literal["GetAgentReplicationInfoForDrs"], Literal["SendAgentMetricsForDrs"], Literal["UntagResource"], Literal["UpdateLaunchConfigurationTemplate"], Literal["UpdateAgentReplicationInfoForDrs"], Literal["ReverseReplication"], Literal["GetLaunchConfiguration"], Literal["ExportSourceNetworkCfnTemplate"], Literal["BatchCreateVolumeSnapshotGroupForDrs"], Literal["DescribeJobs"], Literal["DescribeSourceNetworks"], Literal["CreateLaunchConfigurationTemplate"], Literal["SendClientLogsForDrs"], Literal["NotifyAgentConnectedForDrs"], Literal["ListExtensibleSourceServers"], Literal["ListTagsForResource"], Literal["SendClientMetricsForDrs"], Literal["CreateReplicationConfigurationTemplate"], Literal["ListStagingAccounts"], Literal["DeleteSourceNetwork"], Literal["TerminateRecoveryInstances"], Literal["AssociateSourceNetworkStack"], Literal["UpdateAgentSourcePropertiesForDrs"], Literal["GetFailbackReplicationConfiguration"], Literal["DescribeRecoverySnapshots"], Literal["CreateRecoveryInstanceForDrs"]]
aws_drs_condition_type = Union[Literal["aws:TagKeys"], Literal["drs:CreateAction"], Literal["aws:RequestTag/${TagKey}"]]

class aws_drsStatement(GenericResourceType[aws_drs_privilege_type, aws_drs_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    