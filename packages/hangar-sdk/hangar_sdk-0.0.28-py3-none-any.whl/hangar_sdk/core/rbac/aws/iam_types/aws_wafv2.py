from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_wafv2_privilege_type = Union[Literal["GetRateBasedStatementManagedKeys"], Literal["GetPermissionPolicy"], Literal["DeletePermissionPolicy"], Literal["DescribeManagedProductsByVendor"], Literal["ListLoggingConfigurations"], Literal["CreateWebACL"], Literal["UntagResource"], Literal["UpdateManagedRuleSetVersionExpiryDate"], Literal["GetWebACL"], Literal["ListWebACLs"], Literal["CreateRegexPatternSet"], Literal["ListMobileSdkReleases"], Literal["GetRuleGroup"], Literal["CreateRuleGroup"], Literal["PutLoggingConfiguration"], Literal["ListRegexPatternSets"], Literal["GetLoggingConfiguration"], Literal["GetDecryptedAPIKey"], Literal["ListIPSets"], Literal["DescribeManagedRuleGroup"], Literal["GetManagedRuleSet"], Literal["ListTagsForResource"], Literal["UpdateIPSet"], Literal["DisassociateWebACL"], Literal["ListAvailableManagedRuleGroupVersions"], Literal["DeleteRegexPatternSet"], Literal["DeleteFirewallManagerRuleGroups"], Literal["CheckCapacity"], Literal["CreateAPIKey"], Literal["DeleteRuleGroup"], Literal["GenerateMobileSdkReleaseUrl"], Literal["DisassociateFirewallManager"], Literal["GetSampledRequests"], Literal["ListResourcesForWebACL"], Literal["GetWebACLForResource"], Literal["GetIPSet"], Literal["UpdateWebACL"], Literal["UpdateRuleGroup"], Literal["UpdateRegexPatternSet"], Literal["DeleteIPSet"], Literal["ListAPIKeys"], Literal["GetRegexPatternSet"], Literal["DeleteWebACL"], Literal["ListRuleGroups"], Literal["PutFirewallManagerRuleGroups"], Literal["ListManagedRuleSets"], Literal["PutPermissionPolicy"], Literal["TagResource"], Literal["GetMobileSdkRelease"], Literal["AssociateWebACL"], Literal["ListAvailableManagedRuleGroups"], Literal["PutManagedRuleSetVersions"], Literal["DeleteLoggingConfiguration"], Literal["DescribeAllManagedProducts"], Literal["CreateIPSet"]]
aws_wafv2_condition_type = Union[Literal["aws:TagKeys"], Literal["aws:ResourceTag/${TagKey}"], Literal["aws:RequestTag/${TagKey}"]]

class aws_wafv2Statement(GenericResourceType[aws_wafv2_privilege_type, aws_wafv2_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    