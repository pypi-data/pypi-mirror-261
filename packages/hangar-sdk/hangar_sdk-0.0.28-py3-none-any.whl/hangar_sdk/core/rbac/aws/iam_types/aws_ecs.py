from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_ecs_privilege_type = Union[Literal["DeleteAttributes"], Literal["DeleteCapacityProvider"], Literal["DeleteCluster"], Literal["ListTasks"], Literal["UntagResource"], Literal["ListAttributes"], Literal["DescribeTasks"], Literal["ListClusters"], Literal["DeleteAccountSetting"], Literal["UpdateTaskProtection"], Literal["UpdateClusterSettings"], Literal["UpdateContainerInstancesState"], Literal["CreateCapacityProvider"], Literal["StopTask"], Literal["DescribeTaskSets"], Literal["DeleteService"], Literal["CreateService"], Literal["ListContainerInstances"], Literal["ListServicesByNamespace"], Literal["StartTelemetrySession"], Literal["UpdateServicePrimaryTaskSet"], Literal["DiscoverPollEndpoint"], Literal["SubmitContainerStateChange"], Literal["DescribeCapacityProviders"], Literal["DescribeClusters"], Literal["PutAccountSetting"], Literal["SubmitAttachmentStateChanges"], Literal["RegisterContainerInstance"], Literal["ListTagsForResource"], Literal["CreateTaskSet"], Literal["UpdateTaskSet"], Literal["DeleteTaskDefinitions"], Literal["DeregisterTaskDefinition"], Literal["UpdateCapacityProvider"], Literal["Poll"], Literal["DeleteTaskSet"], Literal["ListTaskDefinitions"], Literal["UpdateService"], Literal["ListAccountSettings"], Literal["RunTask"], Literal["DescribeContainerInstances"], Literal["CreateCluster"], Literal["ExecuteCommand"], Literal["PutAttributes"], Literal["RegisterTaskDefinition"], Literal["ListTaskDefinitionFamilies"], Literal["StartTask"], Literal["ListServices"], Literal["GetTaskProtection"], Literal["TagResource"], Literal["UpdateCluster"], Literal["DescribeServices"], Literal["PutAccountSettingDefault"], Literal["PutClusterCapacityProviders"], Literal["SubmitTaskStateChange"], Literal["DescribeTaskDefinition"], Literal["DeregisterContainerInstance"], Literal["UpdateContainerAgent"]]
aws_ecs_condition_type = Union[Literal["aws:TagKeys"], Literal["aws:ResourceTag/${TagKey}"], Literal["ecs:task-definition"], Literal["ecs:container-instances"], Literal["ecs:enable-service-connect"], Literal["ecs:capacity-provider"], Literal["ecs:service"], Literal["ecs:task"], Literal["ecs:container-name"], Literal["ecs:cluster"], Literal["ecs:enable-execute-command"], Literal["ecs:CreateAction"], Literal["ecs:namespace"], Literal["ecs:account-setting"], Literal["aws:RequestTag/${TagKey}"]]

class aws_ecsStatement(GenericResourceType[aws_ecs_privilege_type, aws_ecs_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    