from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_organizations_privilege_type = Union[Literal["DeletePolicy"], Literal["ListParents"], Literal["ListAWSServiceAccessForOrganization"], Literal["UntagResource"], Literal["EnablePolicyType"], Literal["LeaveOrganization"], Literal["CreateGovCloudAccount"], Literal["ListPolicies"], Literal["ListPoliciesForTarget"], Literal["CloseAccount"], Literal["DeleteOrganization"], Literal["ListTargetsForPolicy"], Literal["AttachPolicy"], Literal["AcceptHandshake"], Literal["DisableAWSServiceAccess"], Literal["MoveAccount"], Literal["ListAccountsForParent"], Literal["DeclineHandshake"], Literal["UpdatePolicy"], Literal["CreateOrganization"], Literal["DescribeResourcePolicy"], Literal["ListDelegatedAdministrators"], Literal["DisablePolicyType"], Literal["CreateOrganizationalUnit"], Literal["DetachPolicy"], Literal["ListCreateAccountStatus"], Literal["ListChildren"], Literal["ListTagsForResource"], Literal["CreateAccount"], Literal["DeregisterDelegatedAdministrator"], Literal["EnableAllFeatures"], Literal["DescribeHandshake"], Literal["RemoveAccountFromOrganization"], Literal["ListHandshakesForAccount"], Literal["ListDelegatedServicesForAccount"], Literal["UpdateOrganizationalUnit"], Literal["DeleteOrganizationalUnit"], Literal["RegisterDelegatedAdministrator"], Literal["CreatePolicy"], Literal["DescribeCreateAccountStatus"], Literal["DescribeOrganizationalUnit"], Literal["PutResourcePolicy"], Literal["CancelHandshake"], Literal["ListAccounts"], Literal["InviteAccountToOrganization"], Literal["DescribeEffectivePolicy"], Literal["DescribePolicy"], Literal["EnableAWSServiceAccess"], Literal["DeleteResourcePolicy"], Literal["TagResource"], Literal["ListRoots"], Literal["ListHandshakesForOrganization"], Literal["DescribeOrganization"], Literal["DescribeAccount"], Literal["ListOrganizationalUnitsForParent"]]
aws_organizations_condition_type = Union[Literal["aws:TagKeys"], Literal["organizations:PolicyType"], Literal["organizations:ServicePrincipal"], Literal["aws:RequestTag/${TagKey}"]]

class aws_organizationsStatement(GenericResourceType[aws_organizations_privilege_type, aws_organizations_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    