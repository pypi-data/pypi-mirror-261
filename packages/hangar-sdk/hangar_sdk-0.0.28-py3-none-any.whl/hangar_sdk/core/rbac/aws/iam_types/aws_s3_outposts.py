from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_s3_outposts_privilege_type = Union[Literal["DeleteObjectVersionTagging"], Literal["PutObjectVersionTagging"], Literal["ReplicateObject"], Literal["PutReplicationConfiguration"], Literal["ListRegionalBuckets"], Literal["ReplicateTags"], Literal["DeleteObjectVersion"], Literal["PutBucketVersioning"], Literal["GetAccessPointPolicy"], Literal["GetBucketTagging"], Literal["GetBucketPolicy"], Literal["ListAccessPoints"], Literal["PutObjectAcl"], Literal["GetReplicationConfiguration"], Literal["PutLifecycleConfiguration"], Literal["DeleteAccessPointPolicy"], Literal["PutObject"], Literal["AbortMultipartUpload"], Literal["DeleteObject"], Literal["GetBucketVersioning"], Literal["ListBucketVersions"], Literal["PutBucketTagging"], Literal["PutAccessPointPolicy"], Literal["GetObjectVersionForReplication"], Literal["ReplicateDelete"], Literal["ListEndpoints"], Literal["PutObjectTagging"], Literal["GetObjectTagging"], Literal["ListSharedEndpoints"], Literal["DeleteAccessPoint"], Literal["DeleteBucketPolicy"], Literal["CreateAccessPoint"], Literal["GetAccessPoint"], Literal["GetBucket"], Literal["GetLifecycleConfiguration"], Literal["ListMultipartUploadParts"], Literal["PutBucketPolicy"], Literal["DeleteObjectTagging"], Literal["CreateEndpoint"], Literal["GetObject"], Literal["CreateBucket"], Literal["GetObjectVersion"], Literal["DeleteEndpoint"], Literal["ListBucketMultipartUploads"], Literal["ListBucket"], Literal["DeleteBucket"], Literal["ListOutpostsWithS3"], Literal["GetObjectVersionTagging"]]
aws_s3_outposts_condition_type = Union[Literal["s3-outposts:signatureAge"], Literal["s3-outposts:DataAccessPointAccount"], Literal["s3-outposts:x-amz-copy-source"], Literal["s3-outposts:x-amz-metadata-directive"], Literal["s3-outposts:versionid"], Literal["s3-outposts:delimiter"], Literal["s3-outposts:RequestObjectTag/<key>"], Literal["s3-outposts:RequestObjectTagKeys"], Literal["s3-outposts:DataAccessPointArn"], Literal["s3-outposts:x-amz-acl"], Literal["s3-outposts:authType"], Literal["s3-outposts:x-amz-storage-class"], Literal["s3-outposts:ExistingObjectTag/<key>"], Literal["s3-outposts:max-keys"], Literal["s3-outposts:signatureversion"], Literal["s3-outposts:prefix"], Literal["s3-outposts:x-amz-content-sha256"], Literal["s3-outposts:AccessPointNetworkOrigin"], Literal["s3-outposts:x-amz-server-side-encryption"]]

class aws_s3_outpostsStatement(GenericResourceType[aws_s3_outposts_privilege_type, aws_s3_outposts_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    