from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_swf_privilege_type = Union[Literal["DescribeWorkflowExecution"], Literal["StartChildWorkflowExecution"], Literal["DescribeActivityType"], Literal["DescribeDomain"], Literal["ListDomains"], Literal["UntagResource"], Literal["RegisterActivityType"], Literal["RegisterWorkflowType"], Literal["ScheduleActivityTask"], Literal["RequestCancelActivityTask"], Literal["CountPendingDecisionTasks"], Literal["ListClosedWorkflowExecutions"], Literal["CompleteWorkflowExecution"], Literal["CountClosedWorkflowExecutions"], Literal["DeprecateDomain"], Literal["ListActivityTypes"], Literal["UndeprecateActivityType"], Literal["SignalExternalWorkflowExecution"], Literal["RespondActivityTaskCanceled"], Literal["DescribeWorkflowType"], Literal["ListTagsForResource"], Literal["RequestCancelWorkflowExecution"], Literal["UndeprecateDomain"], Literal["DeprecateActivityType"], Literal["RegisterDomain"], Literal["RespondDecisionTaskCompleted"], Literal["ListWorkflowTypes"], Literal["StartTimer"], Literal["CancelWorkflowExecution"], Literal["CountPendingActivityTasks"], Literal["CountOpenWorkflowExecutions"], Literal["DeprecateWorkflowType"], Literal["GetWorkflowExecutionHistory"], Literal["FailWorkflowExecution"], Literal["SignalWorkflowExecution"], Literal["TerminateWorkflowExecution"], Literal["RespondActivityTaskFailed"], Literal["RecordActivityTaskHeartbeat"], Literal["TagResource"], Literal["ListOpenWorkflowExecutions"], Literal["UndeprecateWorkflowType"], Literal["RequestCancelExternalWorkflowExecution"], Literal["RecordMarker"], Literal["PollForDecisionTask"], Literal["PollForActivityTask"], Literal["RespondActivityTaskCompleted"], Literal["StartWorkflowExecution"], Literal["ContinueAsNewWorkflowExecution"], Literal["CancelTimer"]]
aws_swf_condition_type = Union[Literal["swf:typeFilter.name"], Literal["aws:TagKeys"], Literal["swf:taskList.name"], Literal["swf:name"], Literal["swf:activityType.name"], Literal["swf:workflowType.name"], Literal["swf:version"], Literal["swf:defaultTaskList.name"], Literal["swf:tagList.member.2"], Literal["swf:tagList.member.3"], Literal["swf:tagList.member.4"], Literal["swf:tagList.member.0"], Literal["aws:RequestTag/${TagKey}"], Literal["swf:tagFilter.tag"], Literal["swf:tagList.member.1"], Literal["swf:typeFilter.version"], Literal["swf:activityType.version"], Literal["swf:workflowType.version"]]

class aws_swfStatement(GenericResourceType[aws_swf_privilege_type, aws_swf_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    