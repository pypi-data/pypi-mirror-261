from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_vpc_lattice_privilege_type = Union[Literal["CreateServiceNetwork"], Literal["UntagResource"], Literal["UpdateAccessLogSubscription"], Literal["CreateServiceNetworkServiceAssociation"], Literal["DeleteServiceNetwork"], Literal["DeleteServiceNetworkServiceAssociation"], Literal["ListTargetGroups"], Literal["DeleteRule"], Literal["ListTargets"], Literal["ListServiceNetworks"], Literal["DeleteService"], Literal["DeregisterTargets"], Literal["CreateService"], Literal["GetTargetGroup"], Literal["RegisterTargets"], Literal["GetAuthPolicy"], Literal["GetListener"], Literal["CreateAccessLogSubscription"], Literal["CreateTargetGroup"], Literal["UpdateServiceNetwork"], Literal["ListTagsForResource"], Literal["DeleteListener"], Literal["GetAccessLogSubscription"], Literal["GetService"], Literal["ListServiceNetworkVpcAssociations"], Literal["ListAccessLogSubscriptions"], Literal["ListServiceNetworkServiceAssociations"], Literal["UpdateListener"], Literal["CreateRule"], Literal["ListListeners"], Literal["PutResourcePolicy"], Literal["UpdateService"], Literal["PutAuthPolicy"], Literal["DeleteServiceNetworkVpcAssociation"], Literal["UpdateRule"], Literal["UpdateServiceNetworkVpcAssociation"], Literal["GetServiceNetworkServiceAssociation"], Literal["CreateListener"], Literal["GetServiceNetwork"], Literal["ListServices"], Literal["DeleteResourcePolicy"], Literal["DeleteAuthPolicy"], Literal["TagResource"], Literal["GetRule"], Literal["ListRules"], Literal["UpdateTargetGroup"], Literal["DeleteTargetGroup"], Literal["CreateServiceNetworkVpcAssociation"], Literal["DeleteAccessLogSubscription"], Literal["GetResourcePolicy"], Literal["GetServiceNetworkVpcAssociation"]]
aws_vpc_lattice_condition_type = Union[Literal["aws:TagKeys"], Literal["vpc-lattice:ServiceArn"], Literal["vpc-lattice:AuthType"], Literal["aws:ResourceTag/${TagKey}"], Literal["vpc-lattice:ServiceNetworkArn"], Literal["vpc-lattice:VpcId"], Literal["vpc-lattice:SecurityGroupIds"], Literal["vpc-lattice:TargetGroupArns"], Literal["vpc-lattice:Protocol"], Literal["aws:RequestTag/${TagKey}"]]

class aws_vpc_latticeStatement(GenericResourceType[aws_vpc_lattice_privilege_type, aws_vpc_lattice_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    