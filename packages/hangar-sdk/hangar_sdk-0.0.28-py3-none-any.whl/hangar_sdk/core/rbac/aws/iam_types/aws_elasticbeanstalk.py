from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_elasticbeanstalk_privilege_type = Union[Literal["DeleteEnvironmentConfiguration"], Literal["DisassociateEnvironmentOperationsRole"], Literal["RemoveTags"], Literal["TerminateEnvironment"], Literal["DescribeEnvironmentHealth"], Literal["DescribeEnvironmentManagedActionHistory"], Literal["DeletePlatformVersion"], Literal["DescribeApplications"], Literal["ValidateConfigurationSettings"], Literal["UpdateTagsForResource"], Literal["ListPlatformVersions"], Literal["CreateStorageLocation"], Literal["CheckDNSAvailability"], Literal["ApplyEnvironmentManagedAction"], Literal["CreatePlatformVersion"], Literal["CreateEnvironment"], Literal["AbortEnvironmentUpdate"], Literal["DeleteConfigurationTemplate"], Literal["RequestEnvironmentInfo"], Literal["RestartAppServer"], Literal["RetrieveEnvironmentInfo"], Literal["CreateApplication"], Literal["ListPlatformBranches"], Literal["DescribeAccountAttributes"], Literal["DescribeEnvironmentResources"], Literal["UpdateApplication"], Literal["ListTagsForResource"], Literal["DescribePlatformVersion"], Literal["CreateApplicationVersion"], Literal["DescribeInstancesHealth"], Literal["DescribeApplicationVersions"], Literal["UpdateEnvironment"], Literal["ComposeEnvironments"], Literal["CreateConfigurationTemplate"], Literal["DescribeEvents"], Literal["DeleteApplication"], Literal["DescribeConfigurationOptions"], Literal["DescribeEnvironmentManagedActions"], Literal["ListAvailableSolutionStacks"], Literal["RebuildEnvironment"], Literal["AddTags"], Literal["UpdateApplicationVersion"], Literal["AssociateEnvironmentOperationsRole"], Literal["PutInstanceStatistics"], Literal["DescribeConfigurationSettings"], Literal["UpdateConfigurationTemplate"], Literal["SwapEnvironmentCNAMEs"], Literal["UpdateApplicationResourceLifecycle"], Literal["DeleteApplicationVersion"], Literal["DescribeEnvironments"]]
aws_elasticbeanstalk_condition_type = Union[Literal["aws:TagKeys"], Literal["elasticbeanstalk:FromEnvironment"], Literal["elasticbeanstalk:FromSolutionStack"], Literal["elasticbeanstalk:FromPlatform"], Literal["elasticbeanstalk:FromApplicationVersion"], Literal["elasticbeanstalk:InApplication"], Literal["elasticbeanstalk:FromApplication"], Literal["elasticbeanstalk:FromConfigurationTemplate"], Literal["aws:RequestTag/${TagKey}"]]

class aws_elasticbeanstalkStatement(GenericResourceType[aws_elasticbeanstalk_privilege_type, aws_elasticbeanstalk_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    