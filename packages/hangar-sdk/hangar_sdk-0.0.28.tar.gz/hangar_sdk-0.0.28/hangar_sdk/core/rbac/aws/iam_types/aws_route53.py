from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_route53_privilege_type = Union[Literal["DeleteReusableDelegationSet"], Literal["GetTrafficPolicy"], Literal["ListTrafficPolicies"], Literal["DeleteQueryLoggingConfig"], Literal["GetTrafficPolicyInstance"], Literal["CreateTrafficPolicy"], Literal["GetTrafficPolicyInstanceCount"], Literal["CreateHostedZone"], Literal["ListHostedZones"], Literal["TestDNSAnswer"], Literal["GetHealthCheckCount"], Literal["DeleteCidrCollection"], Literal["ListCidrCollections"], Literal["CreateTrafficPolicyVersion"], Literal["UpdateTrafficPolicyInstance"], Literal["UpdateTrafficPolicyComment"], Literal["ActivateKeySigningKey"], Literal["DeleteTrafficPolicyInstance"], Literal["ListResourceRecordSets"], Literal["CreateTrafficPolicyInstance"], Literal["ListTagsForResources"], Literal["DeleteKeySigningKey"], Literal["CreateCidrCollection"], Literal["GetReusableDelegationSetLimit"], Literal["DeactivateKeySigningKey"], Literal["ListHostedZonesByVPC"], Literal["UpdateHostedZoneComment"], Literal["EnableHostedZoneDNSSEC"], Literal["GetHealthCheck"], Literal["CreateQueryLoggingConfig"], Literal["DisassociateVPCFromHostedZone"], Literal["CreateHealthCheck"], Literal["GetChange"], Literal["GetDNSSEC"], Literal["GetHealthCheckLastFailureReason"], Literal["GetQueryLoggingConfig"], Literal["ListCidrBlocks"], Literal["AssociateVPCWithHostedZone"], Literal["ListTagsForResource"], Literal["ListTrafficPolicyInstancesByPolicy"], Literal["ListQueryLoggingConfigs"], Literal["ListTrafficPolicyInstancesByHostedZone"], Literal["DeleteHealthCheck"], Literal["GetHostedZoneCount"], Literal["ListGeoLocations"], Literal["ChangeResourceRecordSets"], Literal["DisableHostedZoneDNSSEC"], Literal["UpdateHealthCheck"], Literal["DeleteVPCAssociationAuthorization"], Literal["ListHostedZonesByName"], Literal["GetHealthCheckStatus"], Literal["ListReusableDelegationSets"], Literal["GetCheckerIpRanges"], Literal["ListTrafficPolicyInstances"], Literal["DeleteHostedZone"], Literal["ListHealthChecks"], Literal["ListTrafficPolicyVersions"], Literal["ChangeCidrCollection"], Literal["ListCidrLocations"], Literal["ChangeTagsForResource"], Literal["CreateReusableDelegationSet"], Literal["DeleteTrafficPolicy"], Literal["GetHostedZone"], Literal["CreateKeySigningKey"], Literal["GetHostedZoneLimit"], Literal["GetReusableDelegationSet"], Literal["GetAccountLimit"], Literal["ListVPCAssociationAuthorizations"], Literal["CreateVPCAssociationAuthorization"], Literal["GetGeoLocation"]]
aws_route53_condition_type = Union[Literal["route53:ChangeResourceRecordSetsNormalizedRecordNames"], Literal["route53:ChangeResourceRecordSetsActions"], Literal["route53:ChangeResourceRecordSetsRecordTypes"]]

class aws_route53Statement(GenericResourceType[aws_route53_privilege_type, aws_route53_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    