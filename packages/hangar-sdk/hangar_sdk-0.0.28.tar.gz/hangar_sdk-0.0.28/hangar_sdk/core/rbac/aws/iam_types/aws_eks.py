from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_eks_privilege_type = Union[Literal["DescribeAddonConfiguration"], Literal["DeregisterCluster"], Literal["CreateNodegroup"], Literal["DeleteCluster"], Literal["DescribeAddonVersions"], Literal["UntagResource"], Literal["DescribeAddon"], Literal["UpdatePodIdentityAssociation"], Literal["ListInsights"], Literal["ListAddons"], Literal["DeleteAddon"], Literal["DeletePodIdentityAssociation"], Literal["UpdateAccessEntry"], Literal["ListUpdates"], Literal["ListNodegroups"], Literal["DescribeAccessEntry"], Literal["RegisterCluster"], Literal["ListAccessEntries"], Literal["UpdateEksAnywhereSubscription"], Literal["AssociateEncryptionConfig"], Literal["DescribePodIdentityAssociation"], Literal["CreateAddon"], Literal["DescribeEksAnywhereSubscription"], Literal["DescribeInsight"], Literal["DisassociateAccessPolicy"], Literal["UpdateAddon"], Literal["DeleteEksAnywhereSubscription"], Literal["DisassociateIdentityProviderConfig"], Literal["ListTagsForResource"], Literal["ListEksAnywhereSubscriptions"], Literal["UpdateNodegroupVersion"], Literal["UpdateNodegroupConfig"], Literal["CreatePodIdentityAssociation"], Literal["DeleteAccessEntry"], Literal["DescribeUpdate"], Literal["ListAccessPolicies"], Literal["DescribeCluster"], Literal["DescribeFargateProfile"], Literal["ListIdentityProviderConfigs"], Literal["UpdateClusterConfig"], Literal["ListAssociatedAccessPolicies"], Literal["AssociateIdentityProviderConfig"], Literal["ListFargateProfiles"], Literal["CreateFargateProfile"], Literal["DeleteFargateProfile"], Literal["AccessKubernetesApi"], Literal["UpdateClusterVersion"], Literal["AssociateAccessPolicy"], Literal["CreateCluster"], Literal["DescribeIdentityProviderConfig"], Literal["TagResource"], Literal["DeleteNodegroup"], Literal["ListPodIdentityAssociations"], Literal["DescribeNodegroup"], Literal["ListClusters"], Literal["CreateEksAnywhereSubscription"], Literal["CreateAccessEntry"]]
aws_eks_condition_type = Union[Literal["aws:TagKeys"], Literal["eks:kubernetesGroups"], Literal["eks:namespaces"], Literal["eks:bootstrapClusterCreatorAdminPermissions"], Literal["eks:policyArn"], Literal["eks:accessScope"], Literal["eks:issuerUrl"], Literal["eks:username"], Literal["eks:accessEntryType"], Literal["eks:principalArn"], Literal["eks:clientId"], Literal["aws:RequestTag/${TagKey}"]]

class aws_eksStatement(GenericResourceType[aws_eks_privilege_type, aws_eks_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    