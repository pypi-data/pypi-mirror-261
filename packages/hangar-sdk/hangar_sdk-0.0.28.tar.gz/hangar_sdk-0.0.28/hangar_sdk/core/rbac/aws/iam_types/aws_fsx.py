from typing import Union, Literal, List
from hangar_sdk.core.rbac.aws.base_type import GenericResourceType
from hangar_sdk.resources.terraform import AbstractTerraformResource

aws_fsx_privilege_type = Union[Literal["CreateFileSystem"], Literal["DescribeVolumes"], Literal["DisassociateFileGateway"], Literal["UntagResource"], Literal["DeleteDataRepositoryAssociation"], Literal["CopySnapshotAndUpdateVolume"], Literal["DescribeStorageVirtualMachines"], Literal["DescribeFileCaches"], Literal["ReleaseFileSystemNfsV3Locks"], Literal["DescribeSharedVpcConfiguration"], Literal["DeleteBackup"], Literal["CreateSnapshot"], Literal["DeleteFileCache"], Literal["CreateDataRepositoryTask"], Literal["CreateFileSystemFromBackup"], Literal["UpdateSharedVpcConfiguration"], Literal["UpdateSnapshot"], Literal["RestoreVolumeFromSnapshot"], Literal["UpdateDataRepositoryAssociation"], Literal["CreateFileCache"], Literal["AssociateFileSystemAliases"], Literal["StartMisconfiguredStateRecovery"], Literal["CreateBackup"], Literal["ListTagsForResource"], Literal["CopyBackup"], Literal["UpdateFileSystem"], Literal["DescribeFileSystems"], Literal["ManageBackupPrincipalAssociations"], Literal["UpdateStorageVirtualMachine"], Literal["DescribeAssociatedFileGateways"], Literal["PutResourcePolicy"], Literal["DisassociateFileSystemAliases"], Literal["DeleteStorageVirtualMachine"], Literal["CancelDataRepositoryTask"], Literal["AssociateFileGateway"], Literal["CreateDataRepositoryAssociation"], Literal["DescribeDataRepositoryTasks"], Literal["UpdateVolume"], Literal["CreateVolume"], Literal["DeleteFileSystem"], Literal["DescribeDataRepositoryAssociations"], Literal["DeleteSnapshot"], Literal["CreateStorageVirtualMachine"], Literal["DeleteResourcePolicy"], Literal["TagResource"], Literal["DescribeFileSystemAliases"], Literal["UpdateFileCache"], Literal["BypassSnaplockEnterpriseRetention"], Literal["DescribeBackups"], Literal["DeleteVolume"], Literal["DescribeSnapshots"], Literal["CreateVolumeFromBackup"], Literal["GetResourcePolicy"]]
aws_fsx_condition_type = Union[Literal["aws:TagKeys"], Literal["fsx:StorageVirtualMachineId"], Literal["fsx:NfsDataRepositoryAuthenticationEnabled"], Literal["fsx:NfsDataRepositoryEncryptionInTransitEnabled"], Literal["fsx:ParentVolumeId"], Literal["aws:RequestTag/${TagKey}"]]

class aws_fsxStatement(GenericResourceType[aws_fsx_privilege_type, aws_fsx_condition_type]):
    def __init__(self, policy=None,  arns: List = [],  resources: List[AbstractTerraformResource] = None):
        super().__init__(policy, arns, resources)
    