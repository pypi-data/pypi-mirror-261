{"version":3,"file":"lib_index_js.e0f51e9e8bbdda5163ad.js","mappings":"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","sources":["webpack://jupyterlab-broccoli-blocks/./lib/msg/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://jupyterlab-broccoli-blocks/./src/blocks.ts","webpack://jupyterlab-broccoli-blocks/./src/dart/func.js","webpack://jupyterlab-broccoli-blocks/./src/index.ts","webpack://jupyterlab-broccoli-blocks/./src/javascript/func.js","webpack://jupyterlab-broccoli-blocks/./src/lua/func.js","webpack://jupyterlab-broccoli-blocks/./src/names.js","webpack://jupyterlab-broccoli-blocks/./src/php/func.js","webpack://jupyterlab-broccoli-blocks/./src/python/func.js","webpack://jupyterlab-broccoli-blocks/./src/toolbox_basic.js","webpack://jupyterlab-broccoli-blocks/./src/toolbox_junkbox.js","webpack://jupyterlab-broccoli-blocks/./src/utils.ts"],"sourcesContent":["var map = {\n\t\"./En.js\": [\n\t\t\"./lib/msg/En.js\",\n\t\t\"lib_msg_En_js\"\n\t],\n\t\"./Jp.js\": [\n\t\t\"./lib/msg/Jp.js\",\n\t\t\"lib_msg_Jp_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./lib/msg lazy recursive ^\\\\.\\\\/.*\\\\.js$\";\nmodule.exports = webpackAsyncContext;","\nimport * as Blockly from 'blockly';\n\nimport { ToolboxUtils } from './utils';\nimport { TOOLBOX_BASIC } from './toolbox_basic';\nimport { TOOLBOX_JUNKBOX } from './toolbox_junkbox';\n\n//\nconst toolboxUtils = new ToolboxUtils();\nexport const TOOLBOX = toolboxUtils.add(TOOLBOX_JUNKBOX, TOOLBOX_BASIC, 2);\n\n// text_nocrlf_print\nBlockly.defineBlocksWithJsonArray(\n[{\n  'type': 'text_nocrlf_print',\n  'message0': '%{BKY_BLOCK_TEXT_NOCRLF_PRINT}  %1',\n  'args0': [\n    {\n      'type': 'input_value',\n      'name': 'TEXT',\n    }\n  ],\n  'previousStatement': null,\n  'nextStatement': null,\n  'colour': 230,\n  'tooltip': '',\n  'helpUrl': ''\n}]);\n\n// color_hsv2rgb\nBlockly.defineBlocksWithJsonArray(\n[{\n  'type': 'color_hsv2rgb',\n  'message0': \n    '%{BKY_BLOCK_COLOR_HSV}  %1 %{BKY_BLOCK_COLOR_S}  %2 %{BKY_BLOCK_COLOR_V}  %3',\n  'args0': [\n    {\n      'type':  'input_value',\n      'name':  'H',\n      'check': 'Number',\n      'align': 'RIGHT'\n    },\n    {\n      'type':  'input_value',\n      'name':  'S',\n      'check': 'Number',\n      'align': 'RIGHT'\n    },\n    {\n      'type':  'input_value',\n      'name':  'V',\n      'check': 'Number',\n      'align': 'RIGHT'\n    },\n  ],\n  'output': 'Colour',\n  'colour': 230,\n  'helpUrl': '',\n  'tooltip': '',\n}]);\n\n","//\nimport { dartGenerator as Dart } from 'blockly/dart';\n\n//\nexport function getDartFunctions(generator) {\n  var funcs = {};\n\n//\nfuncs['text_nocrlf_print'] = function(block) {\n  const msg = generator.valueToCode(block, 'TEXT', Dart.ORDER_NONE) || \"''\";\n  return 'stdout.write(' + msg +');\\n';\n};\n\n  //\n  return funcs;\n}\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { IBlocklyRegistry, BlocklyRegistry } from 'jupyterlab-broccoli';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\n\nimport { TOOLBOX } from './blocks';\nimport { getPythonFunctions }  from './python/func';\nimport { getJsFunctions} from './javascript/func.js';\nimport { getLuaFunctions } from './lua/func.js';\nimport { getDartFunctions } from './dart/func.js';\nimport { getPHPFunctions } from './php/func.js';\n\n/**\n * Initialization data for the jupyterlab-broccoli-blocks extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab-broccoli-blocks:plugin',\n  autoStart: true,\n  requires: [IBlocklyRegistry, ITranslator],\n  activate: (app: JupyterFrontEnd, register: IBlocklyRegistry, translator: ITranslator) => {\n    console.log(\n      'JupyterLab extension jupyterlab-broccoli-blocks is activated!'\n    );\n\n    const bregister = (register as BlocklyRegistry);\n\n    // Localization \n    const language = bregister.language;\n    import(`./msg/${language}.js`)\n    .catch(() => {\n      if (language !== 'En') {\n        import(`./msg/En.js`)\n        .catch(() => {});\n      }\n    });\n    const trans = (translator || nullTranslator).load('jupyterlab');\n\n    bregister.registerToolbox(trans.__('Junk Box'), TOOLBOX);\n\n    var fpython = getPythonFunctions(bregister.generators.get('python'));\n    var fjavascript = getJsFunctions(bregister.generators.get('javascript'));\n    var fphp = getPHPFunctions(bregister.generators.get('php'));\n    var flua = getLuaFunctions(bregister.generators.get('lua'));\n    var fdart = getDartFunctions(bregister.generators.get('dart'));\n\n    //while (bregister.lock) {};\n    //bregister.lock = true;\n    // @ts-ignore\n    bregister.registerCodes('python', fpython);\n    // @ts-ignore\n    bregister.registerCodes('javascript', fjavascript);\n    // @ts-ignore\n    bregister.registerCodes('php', fphp);\n    // @ts-ignore\n    bregister.registerCodes('lua', flua);\n    // @ts-ignore\n    bregister.registerCodes('dart', fdart);\n    //bregister.lock = false;\n  }\n};\n\nexport default plugin;\n\n","//\nimport { javascriptGenerator as Js } from 'blockly/javascript';\n\n//const notImplementedMsg = 'Not implemented at this Kernel';\n\n\nexport function getJsFunctions(generator) {\n  var funcs = {};\n\n//\nfuncs['text_print'] = function(block) {\n  const msg = generator.valueToCode(block, 'TEXT', Js.ORDER_NONE) || \"''\";\n  return 'console.log(' + msg + ');\\n';\n};\n\n//\nfuncs['text_nocrlf_print'] = function(block) {\n  const msg = generator.valueToCode(block, 'TEXT', Js.ORDER_NONE) || \"''\";\n  return 'process.stdout.write(' + msg +');\\n';\n};\n\n  //\n  return funcs;\n}\n","//\nimport { luaGenerator as Lua } from 'blockly/lua';\n\n//\nexport function getLuaFunctions(generator) {\n  var funcs = {};\n\n//\nfuncs['text_nocrlf_print'] = function(block) {\n  const msg = generator.valueToCode(block, 'TEXT', Lua.ORDER_NONE) || \"''\";\n  return 'io.write' + msg +'\\n';\n};\n\n  //\n  return funcs;\n}\n","//\n// from blockly/core/names.ts \n//\n\nexport var NameType = {\n  DEVELOPER_VARIABLE : \"DEVELOPER_VARIABLE\",\n  VARIABLE  : \"VARIABLE\",\n  PROCEDURE : \"PROCEDURE\"\n};\n\n","//\nimport { phpGenerator as PHP } from 'blockly/php';\n\n\nexport function getPHPFunctions(generator) {\n  var funcs = {};\n\n//\nfuncs['text_nocrlf_print'] = function(block) {\n  const msg = generator.valueToCode(block, 'TEXT', PHP.ORDER_NONE) || \"''\";\n  return 'print(' + msg +');\\n';\n};\n\n  //\n  return funcs;\n}\n","//\nimport { pythonGenerator as Python } from 'blockly/python';\nimport { NameType } from '../names';\n\n/*\nvar NameType = {\n  DEVELOPER_VARIABLE : \"DEVELOPER_VARIABLE\",\n  VARIABLE  : \"VARIABLE\",\n  PROCEDURE : \"PROCEDURE\"\n};\n*/\n\n/*\n/*\nPython.ORDER_ATOMIC = 0;             // 0 \"\" ...\nPython.ORDER_COLLECTION = 1;         // tuples, lists, dictionaries\nPython.ORDER_STRING_CONVERSION = 1;  // `expression...`\nPython.ORDER_MEMBER = 2.1;           // . []\nPython.ORDER_FUNCTION_CALL = 2.2;    // ()\nPython.ORDER_EXPONENTIATION = 3;     // **\nPython.ORDER_UNARY_SIGN = 4;         // + -\nPython.ORDER_BITWISE_NOT = 4;        // ~\nPython.ORDER_MULTIPLICATIVE = 5;     // * / // %\nPython.ORDER_ADDITIVE = 6;           // + -\nPython.ORDER_BITWISE_SHIFT = 7;      // << >>\nPython.ORDER_BITWISE_AND = 8;        // &\nPython.ORDER_BITWISE_XOR = 9;        // ^\nPython.ORDER_BITWISE_OR = 10;        // |\nPython.ORDER_RELATIONAL = 11;        // in, not in, is, is not,\n                                     //     <, <=, >, >=, <>, !=, ==\nPython.ORDER_LOGICAL_NOT = 12;       // not\nPython.ORDER_LOGICAL_AND = 13;       // and\nPython.ORDER_LOGICAL_OR = 14;        // or\nPython.ORDER_CONDITIONAL = 15;       // if else\nPython.ORDER_LAMBDA = 16;            // lambda\nPython.ORDER_NONE = 99;              // (...)\n/**/\n\n//\n//const notImplementedMsg = 'Not implemented at this Kernel';\n\n\nexport function getPythonFunctions(generator)\n{\n  var funcs = {};\n\n\n\nfuncs['math_change'] = function(block) {\n  // Add to a variable in place.\n  generator.definitions_['from_numbers_import_Number'] = 'from numbers import Number';\n  const argument0 = generator.valueToCode(block, 'DELTA', Python.ORDER_ADDITIVE) || '0';\n  const varName   = generator.nameDB_.getName(block.getFieldValue('VAR'), NameType.VARIABLE);\n\n  return (varName + ' = ' + varName + ' + ' + argument0 + '\\n');\n}\n\n\n//\nfuncs['text_nocrlf_print'] = function(block) {\n  const  msg = generator.valueToCode(block, 'TEXT', Python.ORDER_NONE) || \"''\";\n  return 'print(' + msg + ', end = \"\")\\n';\n}\n\n//\nfuncs['color_hsv2rgb'] = function(block) {\n  let hh = generator.valueToCode(block, 'H', Python.ORDER_NONE) || \"0\";\n  let ss = generator.valueToCode(block, 'S', Python.ORDER_NONE) || \"0.45\";\n  let vv = generator.valueToCode(block, 'V', Python.ORDER_NONE) || \"0.65\";\n\n  hh = hh % 360;\n  if (hh<0.0) hh = hh + 360;\n  if (ss<0.0) ss = 0.0\n  else if (ss>1.0) ss = 1.0;\n  if (vv<0.0) vv = 0.0\n  else if (vv>1.0) vv = 1.0;\n\n  let aa = vv;\n  let bb = vv - vv*ss;\n  let rc = 0;\n  let gc = 0;\n  let bc = 0;\n  //\n  if (hh>=0 && hh<60) {\n    rc = aa;\n    gc = (hh/60)*(aa - bb) + bb;\n    bc = bb;\n  }\n  else if (hh>=60 && hh<120) {\n    rc = (120 - hh)/60*(aa - bb) + bb;\n    gc = aa;\n    bc = bb;\n  }\n  else if (hh>=120 && hh<180) {\n    rc = bb;\n    gc = aa;\n    bc = (hh - 120)/60*(aa - bb) + bb;\n  }\n  else if (hh>=180 && hh<240) {\n    rc = bb;\n    gc = (240 - hh)/60*(aa - bb) + bb;\n    bc = aa;\n  }\n  else if (hh>=240 && hh<300) {\n    rc = (hh - 240)/60*(aa - bb) + bb;\n    gc = bb;\n    bc = aa;\n  }\n  else {           // hh>=300 and hh<360\n    rc = aa;\n    gc = bb;\n    bc = (360 - hh)/50*(aa - bb) + bb;\n  }\n  //\n  rc = Math.trunc(rc*255);\n  gc = Math.trunc(gc*255);\n  bc = Math.trunc(bc*255);\n  //\n  const rgb = '#' + rc.toString(16) + gc.toString(16) + bc.toString(16);\n  const code = Python.quote_(rgb);\n  return [code, Python.ORDER_FUNCTION_CALL];\n};\n\n  //\n  return funcs;\n}\n","//\nexport const TOOLBOX_BASIC = {\n  kind: 'categoryToolbox',\n  contents: [\n    {\n      kind: 'category',\n      name: '%{BKY_TOOLBOX_LOGIC}',\n      colour: '210',\n      contents: [\n        {\n          kind: 'block',\n          type: 'controls_if'\n        },\n        {\n          kind: 'BLOCK',\n          type: 'logic_compare'\n        },\n        {\n          kind: 'BLOCK',\n          type: 'logic_operation',\n          blockxml: `<block type='logic_operation'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'logic_negate',\n          blockxml: `<block type='logic_negate'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'logic_boolean',\n          blockxml: `<block type='logic_boolean'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'logic_null',\n          blockxml: `<block type='logic_null'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'logic_ternary',\n          blockxml: `<block type='logic_ternary'></block>`\n        }\n      ]\n    },\n    {\n      kind: 'category',\n      name: '%{BKY_TOOLBOX_LOOPS}',\n      colour: '120',\n      contents: [\n        {\n          kind: 'BLOCK',\n          type: 'controls_repeat_ext',\n          blockxml: \n            `<block type='controls_repeat_ext'>\n               <value name='TIMES'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>10</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'controls_whileUntil',\n          blockxml: `<block type='controls_whileUntil'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'controls_for',\n          blockxml:\n            `<block type='controls_for'>\n               <value name='FROM'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>1</field>\n                 </shadow>\n               </value>\n               <value name='TO'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>10</field>\n                 </shadow>\n               </value>\n               <value name='BY'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>1</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'controls_forEach',\n          blockxml: `<block type='controls_forEach'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'controls_flow_statements',\n          blockxml: `<block type='controls_flow_statements'></block>`\n        }\n      ]\n    },\n    {\n      kind: 'CATEGORY',\n      name: '%{BKY_TOOLBOX_MATH}',\n      colour: '230',\n      contents: [\n        {\n          kind: 'BLOCK',\n          type: 'math_number',\n          blockxml: `<block type='math_number'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_arithmetic',\n          blockxml:\n            `<block type='math_arithmetic'>\n               <value name='A'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>1</field>\n                 </shadow>\n               </value>\n               <value name='B'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>1</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_single',\n          blockxml:\n            `<block type='math_single'>\n               <value name='NUM'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>9</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_trig',\n          blockxml:\n            `<block type='math_trig'>\n               <value name='NUM'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>45</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_constant',\n          blockxml: `<block type='math_constant'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_number_property',\n          blockxml:\n            `<block type='math_number_property'>\n               <value name='NUMBER_TO_CHECK'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>0</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_change',\n          blockxml:\n            `<block type='math_change'>\n               <value name='DELTA'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>1</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_round',\n          blockxml:\n            `<block type='math_round'>\n               <value name='NUM'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>3.1</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_on_list',\n          blockxml: `<block type='math_on_list'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_modulo',\n          blockxml:\n            `<block type='math_modulo'>\n               <value name='DIVIDEND'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>64</field>\n                 </shadow>\n               </value>\n               <value name='DIVISOR'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>10</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_constrain',\n          blockxml:\n            `<block type='math_constrain'>\n              <value name='VALUE'>\n                <shadow type='math_number'>\n                  <field name='NUM'>50</field>\n                </shadow>\n              </value>\n              <value name='LOW'>\n                <shadow type='math_number'>\n                  <field name='NUM'>1</field>\n                </shadow>\n              </value>\n              <value name='HIGH'>\n                <shadow type='math_number'>\n                  <field name='NUM'>100</field>\n                </shadow>\n              </value>\n            </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_random_int',\n          blockxml:\n            `<block type='math_random_int'>\n               <value name='FROM'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>1</field>\n                 </shadow>\n               </value>\n               <value name='TO'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>100</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'math_random_float',\n          blockxml: `<block type='math_random_float'></block>`\n        }\n      ]\n    },\n    {\n      kind: 'CATEGORY',\n      name: '%{BKY_TOOLBOX_TEXT}',\n      colour: '160',\n      contents: [\n        {\n          kind: 'BLOCK',\n          type: 'text',\n          blockxml: `<block type='text'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_join',\n          blockxml: `<block type='text_join'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_append',\n          blockxml:\n            `<block type='text_append'>\n               <value name='TEXT'>\n                 <shadow type='text'></shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_length',\n          blockxml:\n            `<block type='text_length'>\n               <value name='VALUE'>\n                 <shadow type='text'>\n                   <field name='TEXT'>abc</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_isEmpty',\n          blockxml:\n            `<block type='text_isEmpty'>\n               <value name='VALUE'>\n                 <shadow type='text'>\n                   <field name='TEXT'></field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_indexOf',\n          blockxml:\n            `<block type='text_indexOf'>\n               <value name='VALUE'>\n                 <block type='variables_get'>\n                   <field name='VAR'>text</field>\n                 </block>\n               </value>\n               <value name='FIND'>\n                 <shadow type='text'>\n                   <field name='TEXT'>abc</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_charAt',\n          blockxml:\n            `<block type='text_charAt'>\n               <value name='VALUE'>\n                 <block type='variables_get'>\n                   <field name='VAR'>text</field>\n                 </block>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_getSubstring',\n          blockxml:\n            `<block type='text_getSubstring'>\n               <value name='STRING'>\n                 <block type='variables_get'>\n                   <field name='VAR'>text</field>\n                 </block>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_changeCase',\n          blockxml:\n            `<block type='text_changeCase'>\n               <value name='TEXT'>\n                 <shadow type='text'>\n                   <field name='TEXT'>abc</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_trim',\n          blockxml:\n            `<block type='text_trim'>\n               <value name='TEXT'>\n                 <shadow type='text'>\n                   <field name='TEXT'>abc</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_print',\n          blockxml:\n            `<block type='text_print'>\n               <value name='TEXT'>\n                 <shadow type='text'>\n                   <field name='TEXT'>abc</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'text_prompt_ext',\n          blockxml:\n            `<block type='text_prompt_ext'>\n               <value name='TEXT'>\n                 <shadow type='text'>\n                   <field name='TEXT'>abc</field>\n                 </shadow>\n               </value>\n             </block>`\n        }\n      ]\n    },\n    {\n      kind: 'CATEGORY',\n      name: '%{BKY_TOOLBOX_LISTS}',\n      colour: '260',\n      contents: [\n        {\n          kind: 'BLOCK',\n          type: 'lists_create_with',\n          blockxml:\n            `<block type='lists_create_with'>\n               <mutation items='0'></mutation>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_create_with',\n          blockxml: `<block type='lists_create_with'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_repeat',\n          blockxml:\n            `<block type='lists_repeat'>\n               <value name='NUM'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>5</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_length',\n          blockxml: `<block type='lists_length'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_isEmpty',\n          blockxml: `<block type='lists_isEmpty'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_indexOf',\n          blockxml:\n            `<block type='lists_indexOf'>\n               <value name='VALUE'>\n                 <block type='variables_get'>\n                   <field name='VAR'>list</field>\n                 </block>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_getIndex',\n          blockxml:\n            `<block type='lists_getIndex'>\n               <value name='VALUE'>\n                 <block type='variables_get'>\n                   <field name='VAR'>list</field>\n                 </block>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_setIndex',\n          blockxml:\n            `<block type='lists_setIndex'>\n               <value name='LIST'>\n                 <block type='variables_get'>\n                   <field name='VAR'>list</field>\n                 </block>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_getSublist',\n          blockxml:\n            `<block type='lists_getSublist'>\n               <value name='LIST'>\n                 <block type='variables_get'>\n                   <field name='VAR'>list</field>\n                 </block>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_split',\n          blockxml:\n            `<block type='lists_split'>\n               <value name='DELIM'>\n                 <shadow type='text'>\n                   <field name='TEXT'>,</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'lists_sort',\n          blockxml: `<block type='lists_sort'></block>`\n        }\n      ]\n    },\n    {\n      kind: 'CATEGORY',\n      name: '%{BKY_TOOLBOX_COLOR}',\n      colour: '20',\n      contents: [\n        {\n          kind: 'BLOCK',\n          type: 'colour_picker',\n          blockxml: `<block type='colour_picker'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'colour_random',\n          blockxml: `<block type='colour_random'></block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'colour_rgb',\n          blockxml:\n            `<block type='colour_rgb'>\n               <value name='RED'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>100</field>\n                 </shadow>\n               </value>\n               <value name='GREEN'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>50</field>\n                 </shadow>\n               </value>\n               <value name='BLUE'>\n                 <shadow type='math_number'>\n                   <field name='NUM'>0</field>\n                 </shadow>\n               </value>\n             </block>`\n        },\n        {\n          kind: 'BLOCK',\n          type: 'colour_blend',\n          blockxml:\n            `<block type='colour_blend'>\n               <value name='COLOUR1'>\n                 <shadow type='colour_picker'>\n                   <field name='COLOUR'>#ff0000</field>\n                 </shadow>\n               </value>\n             <value name='COLOUR2'>\n               <shadow type='colour_picker'>\n                 <field name='COLOUR'>#3333ff</field>\n               </shadow>\n             </value>\n             <value name='RATIO'>\n               <shadow type='math_number'>\n                 <field name='NUM'>0.5</field>\n               </shadow>\n             </value>\n           </block>`\n        }\n      ]\n    },\n    {\n      kind: 'SEP'\n    },\n    {\n      kind: 'CATEGORY',\n      custom: 'VARIABLE',\n      colour: '330',\n      name: '%{BKY_TOOLBOX_VARIABLES}'\n    },\n    {\n      kind: 'CATEGORY',\n      custom: 'PROCEDURE',\n      colour: '290',\n      name: '%{BKY_TOOLBOX_FUNCTIONS}'\n    },\n  ]\n};\n\n","\nexport const TOOLBOX_JUNKBOX = {\n  kind: 'categoryToolbox',\n  contents: [\n    {\n      kind: 'CATEGORY',\n      name: '%{BKY_TOOLBOX_JUNKBOX}',\n      colour: 330,\n      contents: [\n        {\n          kind: 'BLOCK',\n          type: 'text_nocrlf_print',\n          blockxml:\n           `<block type='text_nocrlf_print'>\n              <value name='TEXT'>\n                <shadow type='text'>\n                  <field name='TEXT'>abc</field>\n                </shadow>\n              </value>\n            </block>`,\n        },\n\n        {\n          kind: 'BLOCK',\n          type: 'color_hsv2rgb',\n          blockxml:\n           `<block type='color_hsv2rgb'>\n              <value name='H'>\n                <shadow type='math_number'>\n                  <field name='NUM'>0</field>\n                </shadow>\n              </value>\n              <value name='S'>\n                <shadow type='math_number'>\n                  <field name='NUM'>0.45</field>\n                </shadow>\n              </value>\n              <value name='V'>\n                <shadow type='math_number'>\n                  <field name='NUM'>0.65</field>\n                </shadow>\n              </value>\n            </block>`,\n        },\n\n      ]\n    }\n  ]\n};\n\n","\nimport { ToolboxInfo, StaticCategoryInfo } from 'blockly/core/utils/toolbox';\n\n//\nexport class ToolboxUtils {\n\n  constructor() {}\n  \n  add(a: ToolboxInfo, b: ToolboxInfo, num: number): ToolboxInfo {\n    //\n    if ((a.kind as string) !== (b.kind as string)) undefined;\n\n    const c : ToolboxInfo = { kind: a.kind, contents: new Array<StaticCategoryInfo> }\n    const a_len = a.contents.length;\n    const b_len = b.contents.length;\n\n    for (let i = 0; i < a_len; i++) {\n      c.contents[i] = a.contents[i];\n    }\n    // separator\n    for (let i = 0; i < num; i++) {\n      c.contents[a_len + i] = { kind: 'SEP' };\n    }\n    for (let i = 0; i < b_len; i++) {\n      c.contents[a_len + num + i] = b.contents[i];\n    }\n    return c;\n  }\n}\n"],"names":[],"sourceRoot":""}