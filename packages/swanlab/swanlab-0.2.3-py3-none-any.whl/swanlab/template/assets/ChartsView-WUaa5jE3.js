import{u as e,k as a,K as r,o as s,g as t,h as n,i as o,a as l,f as u}from"./index-B4yUEfBb.js";import{C as c}from"./ChartsDashboard-Bi8UMccC.js";import"./SLLoading-CaAXKmBy.js";const h={__name:"ChartsPage",props:{groups:{type:Array,required:!0},charts:{type:Array,required:!0}},setup(o){const l=o,u=e(),h=new Map;a((()=>{h.forEach((e=>{clearInterval(e)}))})),r("$on",((e,a,r)=>{e.map((e=>{if(0===u.experiments.find((a=>a.name===e)).show)return r(e,null,null);p(e,a,r),0===u.experiments.find((a=>a.name===e)).status&&((e,a,r)=>{const s=setInterval((()=>{p(e,a,r)}),5e3);h.set(e+"-"+a,s)})(e,a,r)}))})),r("$off",(()=>{}));const p=(e,a,r)=>{const s=u.experiments.find((a=>a.name===e)).id,t=l.charts.find((e=>e.id===a)).name;n.get(`/experiment/${s}/tag/${t}`).then((a=>{r(e,a.data,null)})).catch((()=>{r(e,null,null)}))};return(e,a)=>(s(),t(c,{groups:o.groups},null,8,["groups"]))}},p={class:"flex flex-col min-h-full bg-higher"},i={key:1,class:"font-semibold pt-5 text-center"},f={__name:"ChartsView",setup(c){const f=e();n.get("/project/charts").then((({data:e})=>{d.value=e.charts,v.value=e.namespaces,m.value=C(),g.value=!0}));const g=o(!1),m=o([]),d=o([]),v=o([]),y=o(0),C=()=>{const e=[];return v.value.forEach((a=>{const r={...a,charts:[]};a.charts.forEach((e=>{const a=d.value.find((a=>a.id===e));if(a.source.every((e=>!f.showMap[e])))return;a.source.filter((e=>!a.error[e])).every((e=>!f.showMap[e]))||r.charts.push(a)})),r.charts.length&&e.push(r)})),e};f.registerChangeShowCallback((()=>{y.value++,m.value=C()})),a((()=>{f.destoryChangeShowCallback()}));const x=[...f.colors];return x.getSeriesColor=(()=>{const e=f.colorMap;return a=>e[a]})(),r("colors",x),(e,a)=>(s(),l("div",p,[m.value.length?(s(),t(h,{groups:m.value,charts:d.value,key:y.value},null,8,["groups","charts"])):g.value?(s(),l("p",i,"Empty Charts")):u("",!0)]))}};export{f as default};
