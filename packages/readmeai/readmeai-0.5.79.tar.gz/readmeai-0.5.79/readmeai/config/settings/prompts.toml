# Large language model prompt templates for generative tasks.

[prompts]
features = """Hello! Please analyze the key technical capabilities and characteristics of the project {0} and describe them in a Markdown table format:

|    |   Feature         | Description |
|----|-------------------|---------------------------------------------------------------|
| ⚙️  | **Architecture**  | *Quick facts about the project's architecture. Max 50 words.* |
| 🔩 | **Code Quality**  | *Quick facts about the code quality and style. Max 50 words.* |
| 📄 | **Documentation** | *Discuss the extent and quality of documentation. Max 50 words.* |
| 🔌 | **Integrations**  | *List key integrations and external dependencies. Max 50 words.* |
| 🧩 | **Modularity**    | *Discuss the modularity and reusability of the codebase. Max 50 words.* |
| 🧪 | **Testing**       | *List testing frameworks and tools used. Max 50 words.* |
| ⚡️  | **Performance**   | *Evaluate efficiency, speed and resource usage. Max 50 words.* |
| 🛡️ | **Security**      | *Discuss measures used for data protection and access control. Max 50 words.* |
| 📦 | **Dependencies**  | *List key external libraries and dependencies. Max 50 words.* |
| 🚀 | **Scalability**   | *Assess ability to handle increased traffic and load. Max 50 words.* |

While generating the table, please reference the following codebase details:\n
================================================================================
Project dependencies: {1}
Repository contents: {2}
================================================================================
"""

file_summary = """Deliver a succinct summary that highlights the main purpose and \
critical features of this code file in relation to its parent repository's architecture. \
Focus on what the code achieves, steering clear of technical implementation details. \
While generating the summaries, please reference the following codebase details: \n
================================================================================
Repository structure: {0}
File path: {1}
File contents: {2}
================================================================================
Additional Requirements: \n
- Avoid using words like 'This file', 'The file', 'This code', etc. but instead begin \
each response with a verb or a noun to make the summary more engaging and impactful. \
- Do not include quotes, code snippets, or bullet points in your response. \
- Your response should be a maximum of 50 words.
"""

logo = """Design a square app logo for the software project - "{project_name}". \
The logo should feature the project name in bold and easily readable letters. \
The color scheme should be engaging and suitable for a technology-focused app, \
with a white background behind the stylized app logo square with rounded corners. \
While designing the logo, please reference the following codebase details: \n
--------------------------------------------------------------------------------
Repository Details:
Project Name: {project_name}
Project Overview: {project_overview}
Project Catch Phrase/Slogan: {project_slogan}
--------------------------------------------------------------------------------
"""

overview = """Analyze the codebase, {0}, and provide a robust, yet succinct overview of the software \
project. Craft a paragraph that encapsulate the core functionalities of the project, its purpose, and value \
proposition. While generating the project overview, please reference the following codebase details: \n
--------------------------------------------------------------------------------
File Summaries: {1}
--------------------------------------------------------------------------------
Additional Requirements: \n
- Avoid deep technical details and focus on the project's high-level use cases and features.
- Do not include quotes, code snippets, or bullet points in your response.
- The project name should be mentioned at least once in the overview.
- Your response should be a maximum of 100 words.
"""

slogan = """Conceptualize a catchy and memorable slogan for the project: {0} ({1}). \
Your response should encapsulate the project's purpose, value proposition, and engage the audience. \
While generating the slogan, please reference the following codebase details: \n
--------------------------------------------------------------------------------
File contents: {2}
-------------------------------------------------------------------------------- \n
Other Requirements: \n
- DO NOT include the project name in the slogan.
- Your response should be a maximum of 8 words.
- The slogan should be concise and memorable.
"""

mermaid = """Create a visual representation of the software project '{0}' using a flowchart diagram. \
The diagram should clearly illustrate the main components and the flow of data or control between them, \
representing the codebase's architecture and execution path. The output should be formatted as a Markdown code block with Mermaid syntax. \
Below is a template for the Mermaid flowchart that you can customize based on the project's specifics: \n
--------------------------------------------------------------------------------

```mermaid
flowchart LR

A[Hard] -->|Text| B(Round)
B --> C{Decision}
C -->|One| D[Result 1]
C -->|Two| E[Result 2]
```

--------------------------------------------------------------------------------
While generating the diagram, please reference the following codebase details:
File Summaries: {1}
--------------------------------------------------------------------------------
"""
