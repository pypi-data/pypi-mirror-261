[tool.poetry]
name = "pandocproj"
version = "0.3.0"
description = "Reporting with Pandoc"
authors = ["numenic <nicolas@cordier.io>"]
readme = "README.rst"
include = [
	{ path = "data"},
	]

[tool.poetry.dependencies]
python = ">=3.11, <3.12"
inotify = "^0.2.10"
appdirs = "^1.4.4"
pandoc = "^2.3"
panflute = "^2.3.0"
tabulate = "^0.9.0"
selenium = "^4.18.1"
pandoc-eqnos = "^2.5.0"
pandoc-fignos = "^2.4.0"
pandoc-latex-admonition = "^1.3.3.2"
pandoc-secnos = "^2.2.2"
pandoc-tablenos = "^2.3.0"
pandoc-xnos = "^2.5.0"
pandocfilters = "^1.5.1"
pantable = "^0.14.2"
pypandoc = "^1.13"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
ipython = "*"
ipykernel = "*"
black = {version="*", extras=["jupyter"]}
isort = "*"
bump2version = "*"
pdbpp = "*"

[tool.pytest.ini_options]
#collect_ignore = ["setup.py"]
addopts = "--cov=pandocproj tests/ --cov-report html --cov-append  --doctest-modules -v -s"
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS"
filterwarnings = [
    'ignore:Accessing jax.config via the jax.config submodule is deprecated'
]

[tool.black]
exclude = "notebooks/.*"

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# command_name = module_for_handler : function_for_handler
pproj = 'pandocproj.__main__:main'
