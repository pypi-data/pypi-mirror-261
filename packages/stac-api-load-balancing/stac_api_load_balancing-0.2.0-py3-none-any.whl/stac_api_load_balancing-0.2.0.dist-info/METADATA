Metadata-Version: 2.1
Name: stac_api_load_balancing
Version: 0.2.0
Summary: Load balancing for stac compliant apis
Home-page: https://github.com/Healy-Hyperspatial/stac-api-load-balancing
Author: Jonathan Healy
Author-email: jonathan.d.healy@gmail.com
License: MIT
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click >=7.1.2
Requires-Dist: locust
Requires-Dist: setuptools
Requires-Dist: Cython
Requires-Dist: bzt
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'

# stac-api-load-balancing
Taurus and Locust load balancing tools for testing stac-api backends.

![Alt text](readme_files/taurus-pgstac.png?raw=true "stac-fastapi-pgstac")


## Run stac-fastapi backends locally (elasticsearch|opensearch|pgstac)
```$ docker-compose up pgstac```   
```$ docker-compose up app-pgstac```

## Install locally for development
```$ pip install -e .```  
    
## Install from PyPI   
```$ pip install stac-api-load-balancing```  

```
Usage: stac-api-load-balancing [OPTIONS]

  Entry point for the stac-api-load-balancing CLI tool.

  This tool facilitates data ingestion, Locust load testing, and Taurus
  performance testing against a specified STAC API endpoint.

  Args:     
  ingest (bool): If True, ingest sample data into the specified STAC API.     
  locust (bool): If True, execute Locust load tests against the
  specified STAC API.     
  taurus (bool): If True, perform Taurus performance
  testing with custom settings against the specified STAC API.     
  concurrency (int): Specifies the number of concurrent users for Taurus testing. Default is 10.      
  ramp_up (str): Specifies the ramp-up period for Taurus testing, in Taurus notation (e.g., '1m' for 1 minute). Default is '1m'.  
  iterations (int): Specifies the number of iterations each virtual user will
  execute in Taurus testing. Default is 100.     
  api_address (str): The base URL of the STAC API to be tested.

Options:
  -i, --ingest               Ingest sample data into the STAC API.
  -l, --locust               Run Locust load tests against the STAC API.
  -t, --taurus               Run the Taurus wrapper for performance testing
                             against the STAC API.
  -c, --concurrency INTEGER  Number of concurrent users for Taurus option.
  -r, --ramp-up TEXT         Ramp-up time for Taurus option.
  -n, --iterations INTEGER   Number of iterations for Taurus option.
  -a, --api-address TEXT     Specify the STAC API URL to test against.
  --version                  Show the version and exit.
  --help                     Show this message and exit.
```

## Ingest test data - http://localhost:8084 is just an example url
```$ stac-api-load-balancing --ingest --api-address http://localhost:8084```

## Run Locust Load Balancing Ouside of Taurus Wrapper
```$ stac-api-load-balancing --locust --api-address http://localhost:8084```  
- go to ```http://localhost:8089``` and start with desired settings

## Inside of Taurus Wrapper
```$ stac-api-load-balancing --taurus --api-address http://localhost:8084```

## Debugging Locust tasks using a single simulated user
```$ python stac_api_load_balancing/config_files/locustfile.py```
