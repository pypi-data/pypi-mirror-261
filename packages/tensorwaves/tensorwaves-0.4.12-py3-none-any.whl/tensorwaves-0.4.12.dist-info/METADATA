Metadata-Version: 2.1
Name: tensorwaves
Version: 0.4.12
Summary: Python fitter package for multiple computational back-ends
Author-email: Common Partial Wave Analysis <compwa-admin@ep1.rub.de>
Maintainer-email: compwa-admin@ep1.rub.de
License: GPLv3 or later
Project-URL: Changelog, https://github.com/ComPWA/tensorwaves/releases
Project-URL: Documentation, https://tensorwaves.rtfd.io
Project-URL: Source, https://github.com/ComPWA/tensorwaves
Project-URL: Tracker, https://github.com/ComPWA/tensorwaves/issues
Keywords: HEP,PWA,amplitude analysis,partial wave analysis,particle physics,physics,tensorflow
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering
Classifier: Typing :: Typed
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyYAML >=5.1
Requires-Dist: attrs >=20.1.0
Requires-Dist: iminuit >=2.0
Requires-Dist: numpy
Requires-Dist: sympy >=1.9
Requires-Dist: tqdm >=4.24.0
Provides-Extra: all
Requires-Dist: tensorwaves[jax] ; extra == 'all'
Requires-Dist: tensorwaves[numba] ; extra == 'all'
Requires-Dist: tensorwaves[pwa] ; extra == 'all'
Requires-Dist: tensorwaves[scipy] ; extra == 'all'
Requires-Dist: tensorwaves[tensorflow] ; extra == 'all'
Requires-Dist: tensorwaves[viz] ; extra == 'all'
Provides-Extra: dev
Requires-Dist: sphinx-autobuild ; extra == 'dev'
Requires-Dist: tensorwaves[all] ; extra == 'dev'
Requires-Dist: tensorwaves[doc] ; extra == 'dev'
Requires-Dist: tensorwaves[jupyter] ; extra == 'dev'
Requires-Dist: tensorwaves[sty] ; extra == 'dev'
Requires-Dist: tensorwaves[test] ; extra == 'dev'
Requires-Dist: tox >=1.9 ; extra == 'dev'
Provides-Extra: doc
Requires-Dist: Sphinx >=3 ; extra == 'doc'
Requires-Dist: ipympl ; extra == 'doc'
Requires-Dist: jupyter ; extra == 'doc'
Requires-Dist: matplotlib ; extra == 'doc'
Requires-Dist: myst-nb >=0.14 ; extra == 'doc'
Requires-Dist: pandas ; extra == 'doc'
Requires-Dist: sphinx-api-relink >=0.0.4 ; extra == 'doc'
Requires-Dist: sphinx-book-theme ; extra == 'doc'
Requires-Dist: sphinx-codeautolink[ipython] ; extra == 'doc'
Requires-Dist: sphinx-comments ; extra == 'doc'
Requires-Dist: sphinx-copybutton ; extra == 'doc'
Requires-Dist: sphinx-design ; extra == 'doc'
Requires-Dist: sphinx-thebe ; extra == 'doc'
Requires-Dist: sphinx-togglebutton ; extra == 'doc'
Requires-Dist: sphobjinv ; extra == 'doc'
Requires-Dist: tensorwaves[all] ; extra == 'doc'
Provides-Extra: jax
Requires-Dist: jax ; extra == 'jax'
Requires-Dist: jaxlib ; extra == 'jax'
Provides-Extra: jupyter
Requires-Dist: black ; extra == 'jupyter'
Requires-Dist: isort ; extra == 'jupyter'
Requires-Dist: jupyterlab ; extra == 'jupyter'
Requires-Dist: jupyterlab-code-formatter ; extra == 'jupyter'
Requires-Dist: jupyterlab-git ; extra == 'jupyter'
Requires-Dist: jupyterlab-lsp ; extra == 'jupyter'
Requires-Dist: jupyterlab-myst ; extra == 'jupyter'
Requires-Dist: python-lsp-ruff ; extra == 'jupyter'
Requires-Dist: python-lsp-server[rope] ; extra == 'jupyter'
Requires-Dist: tensorwaves[doc] ; extra == 'jupyter'
Provides-Extra: numba
Requires-Dist: numba ; extra == 'numba'
Provides-Extra: phasespace
Requires-Dist: tensorwaves[phsp] ; extra == 'phasespace'
Provides-Extra: phsp
Requires-Dist: phasespace[tf] >=1.7.0 ; extra == 'phsp'
Requires-Dist: tensorwaves[tensorflow] ; extra == 'phsp'
Provides-Extra: pwa
Requires-Dist: ampform >=0.12.0 ; extra == 'pwa'
Requires-Dist: tensorwaves[phsp] ; extra == 'pwa'
Provides-Extra: scipy
Requires-Dist: scipy >=1 ; extra == 'scipy'
Provides-Extra: sty
Requires-Dist: mypy >=0.570 ; extra == 'sty'
Requires-Dist: pre-commit >=1.4.0 ; extra == 'sty'
Requires-Dist: ruff ; extra == 'sty'
Requires-Dist: tensorwaves[types] ; extra == 'sty'
Provides-Extra: tensorflow
Requires-Dist: tensorwaves[tf] ; extra == 'tensorflow'
Provides-Extra: test
Requires-Dist: ampform >=0.13 ; extra == 'test'
Requires-Dist: nbmake ; extra == 'test'
Requires-Dist: pyarrow ; extra == 'test'
Requires-Dist: pytest-benchmark ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: pytest-xdist ; extra == 'test'
Requires-Dist: tensorwaves[test-types] ; extra == 'test'
Provides-Extra: test-types
Requires-Dist: ipython ; extra == 'test-types'
Requires-Dist: pytest ; extra == 'test-types'
Requires-Dist: pytest-mock >=3.3.0 ; extra == 'test-types'
Provides-Extra: tf
Requires-Dist: tensorflow !=2.15.0.post1 ; extra == 'tf'
Requires-Dist: tensorflow >=2.4 ; extra == 'tf'
Requires-Dist: tensorflow <2.12 ; (python_version < "3.9.0") and extra == 'tf'
Provides-Extra: types
Requires-Dist: sphinx-api-relink >=0.0.4 ; extra == 'types'
Requires-Dist: tensorwaves[jax] ; extra == 'types'
Requires-Dist: tensorwaves[pwa] ; extra == 'types'
Requires-Dist: tensorwaves[test-types] ; extra == 'types'
Requires-Dist: types-PyYAML ; extra == 'types'
Requires-Dist: types-requests ; extra == 'types'
Requires-Dist: types-tensorflow ; extra == 'types'
Requires-Dist: types-tqdm ; extra == 'types'
Provides-Extra: viz
Requires-Dist: graphviz ; extra == 'viz'

# TensorWaves

[![10.5281/zenodo.5526650](https://zenodo.org/badge/doi/10.5281/zenodo.5526650.svg)](https://doi.org/10.5281/zenodo.5526650)
[![GPLv3+ license](https://img.shields.io/badge/License-GPLv3+-blue.svg)](https://www.gnu.org/licenses/gpl-3.0-standalone.html)

[![PyPI package](https://badge.fury.io/py/tensorwaves.svg)](https://pypi.org/project/tensorwaves)
[![Conda package](https://anaconda.org/conda-forge/tensorwaves/badges/version.svg)](https://anaconda.org/conda-forge/tensorwaves)
[![Supported Python versions](https://img.shields.io/pypi/pyversions/tensorwaves)](https://pypi.org/project/tensorwaves)

[![Binder](https://static.mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/ComPWA/tensorwaves/stable?filepath=docs/usage)
[![Google Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/ComPWA/tensorwaves/blob/stable)
[![Open in Visual Studio Code](https://img.shields.io/badge/vscode-open-blue?logo=visualstudiocode)](https://open.vscode.dev/ComPWA/tensorwaves)
[![GitPod](https://img.shields.io/badge/gitpod-open-blue?logo=gitpod)](https://gitpod.io/#https://github.com/ComPWA/tensorwaves)

[![Documentation build status](https://readthedocs.org/projects/tensorwaves/badge/?version=latest)](https://tensorwaves.readthedocs.io)
[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/ComPWA/tensorwaves/main.svg)](https://results.pre-commit.ci/latest/github/ComPWA/tensorwaves/main)
[![pytest](https://github.com/ComPWA/tensorwaves/workflows/pytest/badge.svg)](https://github.com/ComPWA/tensorwaves/actions?query=branch%3Amain+workflow%3Apytest)
[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](https://mypy.readthedocs.io)
[![Test coverage](https://codecov.io/gh/ComPWA/tensorwaves/branch/main/graph/badge.svg)](https://codecov.io/gh/ComPWA/tensorwaves)
[![Codacy Badge](https://api.codacy.com/project/badge/Grade/db8f89e5588041d8a995968262c224ef)](https://www.codacy.com/gh/ComPWA/tensorwaves)
[![Spelling checked](https://img.shields.io/badge/cspell-checked-brightgreen.svg)](https://github.com/streetsidesoftware/cspell/tree/master/packages/cspell)
[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)

TensorWaves is a fitter package that optimizes mathematical models to data samples. The
models can be any _symbolic_ mathematical expression that is then converted to any
computational backend. In addition, TensorWaves provides functionality to generate toy
Monte Carlo data samples. The package is developed in parallel with
[AmpForm](https://github.com/ComPWA/ampform), which implements physics models, but its
'lambdifying' mechanisms can in principle be used independently.

All documentation can be found on
[tensorwaves.rtfd.io](https://tensorwaves.readthedocs.io).

For an overview of **upcoming releases and planned functionality**, see
[here](https://github.com/ComPWA/tensorwaves/milestones?direction=asc&sort=title&state=open).

## Contribute

See [`CONTRIBUTING.md`](./CONTRIBUTING.md)
