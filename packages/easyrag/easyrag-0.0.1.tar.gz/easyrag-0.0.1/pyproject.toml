[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
Documentation = "https://github.com/unknown/hatch-demo#readme"
Issues = "https://github.com/unknown/hatch-demo/issues"
Source = "https://github.com/unknown/hatch-demo"

[tool.hatch.version]
path = "src/easyrag/__init__.py"

[project]
name = "easyrag"
description = "Description"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [{ name = "Philipp Schmid", email = "schmidphilipp1995@gmail.com" }]
classifiers = [
  "Topic :: Internet",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
]
dynamic = ["version"]
# scripts = { tamer = "tamer.cli.main:main" }
dependencies = [
  "huggingface_hub",
  "langchain==0.1.9",
  "langgraph",
  "asyncio",
  "nest_asyncio",
]

[tool.isort]
profile = "black"

[tool.ruff]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]
# Same as Black.
line-length = 119

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10
target-version = "py310"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "-ra"
testpaths = ["tests"]
pythonpath = ['.']
