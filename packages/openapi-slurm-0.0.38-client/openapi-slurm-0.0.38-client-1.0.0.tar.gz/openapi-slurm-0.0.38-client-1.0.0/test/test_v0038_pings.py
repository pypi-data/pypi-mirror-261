# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.

    The version of the OpenAPI document: 0.0.38
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.v0038_pings import V0038Pings

class TestV0038Pings(unittest.TestCase):
    """V0038Pings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0038Pings:
        """Test V0038Pings
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0038Pings`
        """
        model = V0038Pings()
        if include_optional:
            return V0038Pings(
                meta = openapi_client.models.v0/0/38_meta.v0.0.38_meta(
                    plugin = openapi_client.models.v0_0_38_meta_plugin.v0_0_38_meta_plugin(
                        type = '', 
                        name = '', ), 
                    slurm = openapi_client.models.v0_0_38_meta_slurm.v0_0_38_meta_Slurm(
                        version = openapi_client.models.v0_0_38_meta_slurm_version.v0_0_38_meta_Slurm_version(
                            major = '', 
                            micro = '', 
                            minor = '', ), 
                        release = '', ), ),
                errors = [
                    openapi_client.models.v0/0/38_error.v0.0.38_error(
                        error = '', 
                        error_number = 56, )
                    ],
                pings = [
                    openapi_client.models.v0/0/38_ping.v0.0.38_ping(
                        hostname = '', 
                        ping = 'UP', 
                        mode = '', 
                        status = 56, )
                    ]
            )
        else:
            return V0038Pings(
        )
        """

    def testV0038Pings(self):
        """Test V0038Pings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
