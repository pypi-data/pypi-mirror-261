[build-system]
requires = [ "poetry-core",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "substratecore"
version = "20240311.0"
description = "Autogenerated models and serialization for the Substrate API and SDKs"
readme = "README.md"
authors = [ "vprtwn <ben@substrate.run>",]
[[tool.poetry.packages]]
include = "sb_models"

[tool.ruff]
line-length = 120
output-format = "grouped"
target-version = "py37"
exclude = [ "scripts", "sb_models/tests",]

[tool.poetry.dependencies]
python = ">=3.10,<4"
pydantic = "<2.0.0"
networkx = "3.2.1"
modal = "0.60.7"
numpy = "1.26.2"
fastapi = "^0.108.0"

[tool.ruff.lint]
ignore-init-module-imports = true
ignore = [ "B006", "ARG002", "ARG001",]
unfixable = [ "T201", "T203",]
select = [ "I", "B", "F401", "E722", "ARG", "TCH004", "T201", "T203",]

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
markers = [ "unit: tests intended to be run against only local code - no external integrations", "e2e: tests intended to encapsulate the entire lifecycle of an interaction with the substrate system",]

[tool.poetry.dependencies.ray]
version = "2.9.3"
extras = [ "serve",]

[tool.ruff.lint.isort]
length-sort = true
length-sort-straight = true
combine-as-imports = true
extra-standard-library = [ "typing_extensions",]
known-first-party = [ "substrate", "substratecore", "tests",]

[tool.poetry.group.dev.dependencies]
black = "^24.1.1"
datamodel-code-generator = ">=0.25.1"
requests = ">=2.31.0"
pillow = "10.2.0"
jinja2 = ">=3.1.3"
ruff = "0.2.*"
toml = "0.10.*"
isort = "^5.13.1"
pytest = "^8.0.0"
pre-commit = "^3.6.1"
torch = "^2.2.1"
transformers = "^4.38.1"
pytest-asyncio = "^0.23.5"
