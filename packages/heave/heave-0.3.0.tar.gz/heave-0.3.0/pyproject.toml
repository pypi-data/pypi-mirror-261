[tool.poetry]
name = "heave"
version = "0.3.0"
description = "CLI tool to batch update or insert data."
authors = ["Jonathan Biemond <jonathan.biemond@devrygreenhouses.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "heave"}]

[tool.poetry.dependencies]
python = "^3.10"
psycopg = "^3.1.18"
sqlalchemy = "^2.0.27"
click = "^8.1.7"


[tool.poetry.group.dev.dependencies]
ruff = "^0.2.1"
pytest = "^8.0.0"
coverage = "^7.4.1"
pre-commit = "^3.6.1"
python-semantic-release = "^9.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
heave = "heave.cli:cli"

[tool.ruff]
lint.select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "W",   # pycodestyle
    "B",   # bugbear
    "I",   # isort
    "RUF", # ruff
    "D",   # pydocstyle
    "A",   # builtins
    "C4",  # comprehension
    "UP",  # pyupgrade
]

lint.ignore = [
    "E501", # ruff format handles line length
    "D203", # one-blank-line-before-class: conflicts with D211
    "D213", # multi-line-summary-second-line: conflicts with D212
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # __init__.py files may have unused imports

[tool.semantic_release]
version_variables = ["pyproject.toml:version"]
assets = []
commit_message = "v{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
build_command = "pip install poetry && poetry build"

[tool.semantic_release.branches.main]
match = "(main)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = false
upload_to_repository = false
upload_to_release = false
