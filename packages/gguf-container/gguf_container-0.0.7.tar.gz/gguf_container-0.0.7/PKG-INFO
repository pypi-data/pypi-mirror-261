Metadata-Version: 2.1
Name: gguf-container
Version: 0.0.7
Summary: gguf-container (core + contract backend + local frontend)
Author-email: calcuis <info@calcu.io>
Description-Content-Type: text/markdown
Classifier: License :: OSI Approved :: MIT License
Requires-Dist: gguf-core
Project-URL: Homepage, https://github.com/calcuis/container-frontend
Project-URL: Issues, https://github.com/calcuis/container-frontend/issues

### container

gguf-container comes with website/dApp (gguf.us) full source code (backend + frontend) plus gguf-core and its dependencies

#### install it via:
```
pip install gguf-container
```
[<img src="https://raw.githubusercontent.com/calcuis/gguf-connector/master/gguf.gif" width="128" height="128">](https://github.com/calcuis/gguf-connector)
[<img src="https://raw.githubusercontent.com/calcuis/gguf-core/master/gguf.gif" width="128" height="128">](https://github.com/calcuis/gguf-core)

### user manual (gguf-core)
```
gguf -h
```
#### check current version (gguf-core)
```
gguf -v
```
#### cli connector
```
gguf c
```
#### gui connector
```
gguf g
```
#### interface selector
```
gguf i
```
#### model metadata reader
```
gguf r
```
#### get feature
```
gguf get [url]
```
#### sample model list
```
gguf s
```
#### pdf analyzor (beta)
```
gguf p
```
#### launch to container frontend via gguf:
```
gguf w
```

#### launch to the container frontend via gguf-container by:
```
python -m gguf_container
```

find container frontend (gguf.us) full source code in this pack; you can opt to run the server.py and host the frontend locally (see tutorial below)

### container frontend

container js frontend

#### run it locally with python/python3:
```
python server.py
```
[<img src="https://raw.githubusercontent.com/calcuis/container-frontend/master/demo1.png" width="350" height="400">](https://github.com/calcuis/container-frontend/master/demo1.png)
[<img src="https://raw.githubusercontent.com/calcuis/container-frontend/master/demo2.png" width="350" height="400">](https://github.com/calcuis/container-frontend/master/demo2.png)

🎮play with testnet(s)🍿 awesome🐷

#### player (everybody)
get container(s) from shop; can edit owned container with unlimited times! e.g., you can change the name and image to a rare cryptopunk and show it off to your fatty peer(s)🐷🐷🐷 you have owned the most expensive 🐷JPEG🖼️! in a nutshell: you own the container🍼 you own the planet🌎 sounds good🐷?

[<img src="https://raw.githubusercontent.com/calcuis/container-frontend/master/demo6.png" width="335" height="290">](https://github.com/calcuis/container-frontend/master/demo6.png)

em.. you can modify the container under the portfolio tab as above🐷; if you set the container as your ens avatar, it will source the updated one automatically; and you are able to see it beside the connect button (on top right corner)

#### admin (assigned by owner)
list new container(s):

[<img src="https://raw.githubusercontent.com/calcuis/container-frontend/master/demo3.png" width="180" height="132">](https://github.com/calcuis/container-frontend/master/demo3.png)

plus, edit listed container content (except price) before sold

#### owner (transferable)
transfer shop ownership; assign admin role; close/open the shop:

[<img src="https://raw.githubusercontent.com/calcuis/container-frontend/master/demo4.png" width="180" height="245">](https://github.com/calcuis/container-frontend/master/demo4.png)

redeem shop balances:

[<img src="https://raw.githubusercontent.com/calcuis/container-frontend/master/demo5.png" width="160" height="245">](https://github.com/calcuis/container-frontend/master/demo5.png)
🍼🐷

in addition, edit the container price before sold

### smart contract backend
check the [contract source code](https://github.com/calcuis/container-smart-contract) 📜📚
or you can find it (contract.sol) in this pack

testnet deployment:
- Goerli (chain id: `5`; compiler version: ^0.8.24)
[0x7ec34595c19f6e12d62E562D896D7C403fBBcb05](https://goerli.etherscan.io/address/0x7ec34595c19f6e12d62E562D896D7C403fBBcb05)
- Sepolia (chain id: `11155111`; compiler version: ^0.8.24)
[0x11A276eC4332277b389cFbC51f9076517EF16Da9](https://sepolia.etherscan.io/address/0x11A276eC4332277b389cFbC51f9076517EF16Da9)
- Linea (chain id: `59140`; compiler version: ^0.8.19)
[0x07839b9A6712CC239Ea573174b23B871E819cBA0](https://explorer.goerli.linea.build/address/0x07839b9A6712CC239Ea573174b23B871E819cBA0)
- Mumbai (chain id: `80001`; compiler version: ^0.8.24)
[0x631B17eEA8F2bc7b2B43055576157488D306bF73](https://mumbai.polygonscan.com/address/0x631B17eEA8F2bc7b2B43055576157488D306bF73)
