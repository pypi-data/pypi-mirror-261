Metadata-Version: 2.1
Name: nbodyx
Version: 0.0.1rc51.post1
Summary: A JAX simulator for N body problems.
Author-email: Maximilian Stolzle <maximilian@stoelzle.ch>
Requires-Python: >=3.10.0
Description-Content-Type: text/markdown
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: diffrax
Requires-Dist: jax
Requires-Dist: numpy
Requires-Dist: opencv-python
Requires-Dist: tqdm
Requires-Dist: matplotlib ; extra == "examples"
Requires-Dist: pyspark>=3.0.0 ; extra == "spark"
Requires-Dist: bandit[toml]==1.7.7 ; extra == "test"
Requires-Dist: black==24.2.0 ; extra == "test"
Requires-Dist: check-manifest==0.49 ; extra == "test"
Requires-Dist: flake8-bugbear==24.2.6 ; extra == "test"
Requires-Dist: flake8-docstrings ; extra == "test"
Requires-Dist: flake8-formatter_junit_xml ; extra == "test"
Requires-Dist: flake8 ; extra == "test"
Requires-Dist: flake8-pyproject ; extra == "test"
Requires-Dist: pre-commit==3.6.2 ; extra == "test"
Requires-Dist: pylint==3.1.0 ; extra == "test"
Requires-Dist: pylint_junit ; extra == "test"
Requires-Dist: pytest-cov==4.1.0 ; extra == "test"
Requires-Dist: pytest-mock<3.12.1 ; extra == "test"
Requires-Dist: pytest-runner ; extra == "test"
Requires-Dist: pytest==8.0.2 ; extra == "test"
Requires-Dist: pytest-github-actions-annotate-failures ; extra == "test"
Requires-Dist: shellcheck-py==0.9.0.6 ; extra == "test"
Project-URL: Documentation, https://github.com/microsoft/python-package-template/tree/main#readme
Project-URL: Source, https://github.com/microsoft/python-package-template
Project-URL: Tracker, https://github.com/microsoft/python-package-template/issues
Provides-Extra: examples
Provides-Extra: spark
Provides-Extra: test

# NBODYX: Simulating N-Body Systems with Jax

This repository derives ODEs for N-Body systems and simulates them using Jax. The main goal is to provide a simple and efficient way to simulate N-Body systems using Jax.
