[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling>=1.17",
]

[project]
name = "hatch-jupyter-builder"
description = "A hatch plugin to help build Jupyter packages"
readme = "README.md"
keywords = [
  "hatch",
  "jupyter",
  "jupyterlab",
]
license = { file = "LICENSE.txt" }
authors = [
  { name = "Jupyter Development Team", email = "jupyter@googlegroups.com" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = [
  "version",
]
dependencies = [
  "hatchling>=1.17",
]
[project.optional-dependencies]
docs = [
  "hatch_jupyter_builder",
  "myst-parser",
  "pydata-sphinx-theme",
  "sphinx-autodoc-typehints",
  "sphinxcontrib-spelling",
]
test = [
  "hatch",
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "tomli",
  "twine",
]
[project.urls]
Documentation = "https://github.com/jupyterlab/hatch-jupyter-builder#readme"
Issues = "https://github.com/jupyterlab/hatch-jupyter-builder/issues"
Source = "https://github.com/jupyterlab/hatch-jupyter-builder"
[project.scripts]
hatch-jupyter-builder = 'hatch_jupyter_builder.cli:run'
[project.entry-points.hatch]
jupyter = "hatch_jupyter_builder.hooks"

[tool.hatch.version]
path = "hatch_jupyter_builder/__init__.py"

[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.env-vars]
SPHINXOPTS = "-W"
[tool.hatch.envs.docs.scripts]
build = "make -C docs html"
api = "sphinx-apidoc -o docs/source/reference/api -f -E hatch_jupyter_builder hatch_jupyter_builder/migrate/jupyter_packaging.py"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
test = "python -m pytest -vv {args}"
nowarn = "python -m pytest -vv -W default {args}"

[tool.hatch.envs.cov]
features = ["test"]
dependencies = ["coverage", "pytest-cov"]
[tool.hatch.envs.cov.scripts]
test = "python -m pytest -vv --cov hatch_jupyter_builder --cov-branch --cov-report term-missing:skip-covered {args}"

[tool.hatch.envs.migration]
features = ["test"]
dependencies = ["pytest-xdist[psutil]"]
[tool.hatch.envs.migration.scripts]
test = "python -m pytest -n auto -vv --migration-tests True"

[tool.hatch.envs.typing]
dependencies = ["pre-commit"]
detached = true
[tool.hatch.envs.typing.scripts]
test = "pre-commit run --all-files --hook-stage manual mypy"

[tool.hatch.envs.lint]
dependencies = ["pre-commit"]
detached = true
[tool.hatch.envs.lint.scripts]
build = [
  "pre-commit run --all-files ruff",
  "pre-commit run --all-files ruff-format",
]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
  "PYI",         # flake8-pyi
]
ignore = [
  "PLR",    # Design related pylint codes
  "B027",   # Allow non-abstract empty methods in abstract base classes
  "SIM105", # SIM105 Use `contextlib.suppress(...)`
]
unfixable = [
  # Don't touch print statements
  "T201",
  # Don't touch noqa lines
  "RUF100",
]

[tool.ruff.lint.per-file-ignores]
# B011 Do not call assert False since python -O removes these calls
# T201 `print` found
# B018 Found useless expression
# PT011 `pytest.raises(ValueError)` is too broad
"tests/*" = ["B011", "B018", "C4", "T201", "PTH", "EM", "PT011", "ARG"]

[tool.pytest.ini_options]
minversion = "6.0"
xfail_strict = true
log_cli_level = "info"
addopts = [
  "-raXs", "--durations=10", "--color=yes", "--doctest-modules",
   "--showlocals", "--strict-markers", "--strict-config"
]
testpaths = [
    "tests/"
]
norecursedirs = "tests/data/*"
filterwarnings = [
  "error"
]

[tool.coverage.run]
omit = [
   "hatch_jupyter_builder/cli.py",
   "hatch_jupyter_builder/migrate/*",
   "hatch_jupyter_builder/compare_migrated/*"
]
relative_files = true
source = ["hatch_jupyter_builder"]

[tool.mypy]
python_version = "3.8"
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
files = ["hatch_jupyter_builder"]

[tool.interrogate]
ignore-init-module=true
ignore-private=true
ignore-semiprivate=true
ignore-property-decorators=true
ignore-nested-functions=true
ignore-nested-classes=true
fail-under=100
exclude = ["docs", "tests"]

[tool.repo-review]
ignore = ["GH102"]
