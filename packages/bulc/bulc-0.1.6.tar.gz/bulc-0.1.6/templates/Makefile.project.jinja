# Thanks to Job Vranish (https://spin.atomicobject.com/2016/08/26/makefile-c-projects/)

{%- macro decl_target(target) -%}
# Declaring Target '{{ target.clean_name() }}'
{{ target.type.name }}_{{ target.clean_name() }} := {{ target.build_name() }}
{{ target.type.name }}_{{ target.clean_name() }}_SRCS := {% for src in target.sources() %}{{ src }} {% endfor %}
{{ target.type.name }}_{{ target.clean_name() }}_OBJS := $({{ target.type.name }}_{{ target.clean_name() }}_SRCS:%=$(BUILD_DIR)/%.o)
{{ target.type.name }}_{{ target.clean_name() }}_DEPS := $({{ target.type.name }}_{{ target.clean_name() }}_OBJS:.o=.d)
{{ target.type.name }}_{{ target.clean_name() }}_INC_DIRS := {% for inc in target.include_dirs(ignore_deps=False) %}{{ inc }} {% endfor %}
{{ target.type.name }}_{{ target.clean_name() }}_INC_FLAGS := $(addprefix -I,$({{ target.type.name }}_{{ target.clean_name() }}_INC_DIRS))
{{ target.type.name }}_{{ target.clean_name() }}_LIBS := {% for lib in target.depends(ignore_deps=False) %}{{ lib }} {% endfor %}
{{ target.type.name }}_{{ target.clean_name() }}_LDFLAGS := -L$(BUILD_DIR) $(addprefix -l,$({{ target.type.name }}_{{ target.clean_name() }}_LIBS))
{{ target.type.name }}_{{ target.clean_name() }}_REQS := {% for lib in target.depends(ignore_deps=False) %}lib{{ lib }}.a {% endfor %}
{{ target.type.name }}_{{ target.clean_name() }}_PREREQS := $(addprefix $(BUILD_DIR)/,$({{ target.type.name }}_{{ target.clean_name() }}_REQS))
{%- endmacro -%}

{%- macro target_recipe(target) -%}
# Target '{{ target.clean_name() }}' Recipe
$(BUILD_DIR)/$({{ target.type.name }}_{{ target.clean_name() }}): $({{ target.type.name }}_{{ target.clean_name() }}_OBJS) $({{ target.type.name }}_{{ target.clean_name() }}_PREREQS)
{%- if target.type.name == 'EXE' %}
	$(CC) $({{ target.type.name }}_{{ target.clean_name() }}_OBJS) -o $@ $({{ target.type.name }}_{{ target.clean_name() }}_LDFLAGS)
{% else %}
	$(AR) -crs $@ $({{ target.type.name }}_{{ target.clean_name() }}_OBJS) $({{ target.type.name }}_{{ target.clean_name() }}_LIBS)
{% endif %}
{%- endmacro %}

BUILD_DIR := ./build

{% for target in project.targets -%}
{{ decl_target(target) }}

{% endfor -%}


# The -MMD and -MP flags together generate Makefiles for us!
# These files will have .d instead of .o as the output.
CPPFLAGS := {% for target in project.targets %}$({{ target.type.name }}_{{ target.clean_name() }}_INC_FLAGS) {% endfor %} -MMD -MP

all: {% for target in project.targets %}$(BUILD_DIR)/$({{ target.type.name }}_{{ target.clean_name() }}) {% endfor %}

{% for target in project.targets -%}
{{ target_recipe(target) }}
{% endfor -%}

# Build step for C source
$(BUILD_DIR)/%.c.o: %.c
	mkdir -p $(dir $@)
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

.PHONY: all clean
clean:
	rm -r $(BUILD_DIR)

# Include the .d makefiles. The - at the front suppresses the errors of missing
# Makefiles. Initially, all the .d files will be missing, and we don't want those
# errors to show up.
{%- for target in project.targets %}
-include $({{ target.type.name }}_{{ target.clean_name() }}_DEPS)
{%- endfor %}
